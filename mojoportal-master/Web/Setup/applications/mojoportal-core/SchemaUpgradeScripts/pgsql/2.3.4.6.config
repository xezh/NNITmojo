


-- always put schema changes at the top




create or replace function drop_type
(
	varchar(100) --: typename
) returns int4 
as '
declare
	_typename alias for $1;
	_rowcount int4;

begin

_rowcount := 0;
perform 1 from pg_class where
	  relname like _typename limit 1;
	
if found then
	EXECUTE ''DROP TYPE '' || _typename || '' CASCADE;'';
	GET DIAGNOSTICS _rowcount = ROW_COUNT;
end if;
return _rowcount; 
end'
security definer language plpgsql;

CREATE OR REPLACE FUNCTION  monthname(timestamptz)
  RETURNS varchar(10) AS
'
declare
	_date alias for $1;
	_month int;
	_monthname varchar(10);
begin
    _month := date_part(''month'', _date);
    _monthname := ''January'';
    if _month = 2 then
        _monthname := ''February'';
    end if;
    if _month = 3 then
        _monthname := ''March'';
    end if;
    if _month = 4 then
        _monthname := ''April'';
    end if;
    if _month = 5 then
        _monthname := ''May'';
    end if;
    if _month = 6 then
        _monthname := ''June'';
    end if;
    if _month = 7 then
        _monthname := ''July'';
    end if;
    if _month = 8 then
        _monthname := ''August'';
    end if;
    if _month = 9 then
        _monthname := ''September'';
    end if;
    if _month = 10 then
        _monthname := ''October'';
    end if;
    if _month = 11 then
        _monthname := ''November'';
    end if;
    if _month = 12 then
        _monthname := ''December'';
    end if;
    return _monthname;    
end;'
  LANGUAGE 'plpgsql' VOLATILE SECURITY DEFINER;
  
  -- keep the above at the top
  -- --------------------------------





select drop_type('mp_commercesalesbyyeartype');
CREATE TYPE  mp_commercesalesbyyeartype AS (
		y int4 , 
		sales numeric(15,4)  
		
);


create or replace function mp_commercereport_salesbyyearbysite
(
	char(36) --:siteguid $1
) returns setof mp_commercesalesbyyeartype 
as '
select 	
		cast(date_part(''year'', orderdateutc) as int4) as y,
		cast(SUM(subtotal) as numeric(15,4)) As sales 
		
from 		mp_commercereport
 
where 	siteguid = $1 

group by 	date_part(''year'', orderdateutc)
		
order by 	y desc

; '
security definer language sql;
grant execute on function mp_commercereport_salesbyyearbysite
(
	char(36) --:siteguid $1
) to public;

create or replace function mp_commercereport_salesbyyearbymodule
(
	char(36) --:moduleguid $1
) returns setof mp_commercesalesbyyeartype 
as '
select 	
		cast(date_part(''year'', orderdateutc) as int4) as y,
		cast(SUM(subtotal) as numeric(15,4)) As sales 
		
from 		mp_commercereport
 
where 	moduleguid = $1 

group by 	date_part(''year'', orderdateutc)
		
order by 	y desc

; '
security definer language sql;
grant execute on function mp_commercereport_salesbyyearbymodule
(
	char(36) --:moduleguid $1
) to public;





-- Keep this at the bottom -------------------------

drop function drop_type
(
	varchar(100) --: typename
);
