<?xml version="1.0" encoding="utf-8" ?>
<Definitions>
	<MarkupDefinition
		name="Projects"
		moduleClass="projects-module"
		editPageClass="projects-module-edit"
		fieldDefinitionSrc="$_SitePath_$/SuperFlexi/Fields/projects-module-fields.config"
		fieldDefinitionGuid="65de4e08-c4a8-4e84-a3d0-0ee39cec125b"
		jsonRenderLocation="inHead"
		useHeader="false"
		useFooter="false"
	>
		<ModuleTitleFormat>
			<![CDATA[
				<h2 class="moduletitle flex-heading">{0}</h2>
			]]>
		</ModuleTitleFormat>

		<ModuleTitleMarkup>
			<![CDATA[
				$_ModuleTitle_$
			]]>
		</ModuleTitleMarkup>

		<ModuleLinksFormat>
			<![CDATA[
				<span class="modulelinks flexi-module-links">{0}{1}{2}{3}</span>
			]]>
		</ModuleLinksFormat>

<ModuleInstanceMarkupTop><![CDATA[
$_ModuleLinks_$
<div class="sort-items settingrow">
	<button class="btn btn-primary active" type="button" data-group="all">All</button>
</div>
	<div class="sortable-items">
]]></ModuleInstanceMarkupTop>
		<ModuleInstanceMarkupBottom><![CDATA[</div>]]></ModuleInstanceMarkupBottom>
		<InstanceFeaturedImageFormat></InstanceFeaturedImageFormat>
		<HeaderContentFormat><![CDATA[<div class='flexi-header'>{0}</div>]]></HeaderContentFormat>
		<FooterContentFormat><![CDATA[<div class='flexi-footer'>{0}</div>]]></FooterContentFormat>
		<ModuleSettingsLinkFormat><![CDATA[ <a class='ModuleEditLink flexi-settings' href='{0}'><span class="icon-cog"></span> Settings</a>]]></ModuleSettingsLinkFormat>
		<AddItemLinkFormat><![CDATA[ <a class='ModuleEditLink flexi-item-add' href='{0}'><span class="icon-pencil"></span> Add Project</a>]]></AddItemLinkFormat>
		<EditHeaderLinkFormat><![CDATA[ <a class='ModuleEditLink flexi-header-edit' href='{0}'>Edit Header</a>]]></EditHeaderLinkFormat>
		<EditFooterLinkFormat><![CDATA[ <a class='ModuleEditLink flexi-footer-edit' href='{0}'>Edit Footer</a>]]></EditFooterLinkFormat>
		<ItemEditLinkFormat><![CDATA[<a class='flexi-item-edit modulelinks' href='{0}'><span class='fa fa-pencil'></span> Edit Project</a>]]></ItemEditLinkFormat>

		<ItemsWrapperFormat><![CDATA[{0}]]></ItemsWrapperFormat>

		<!-- Rendered per x items, depending on value of itemsPerGroup int.
			 Option is not required. To show all items use itemsPerGroup="-1"
			 $_Items[#]_$ represents a particular item based on the index provided.
			 Indexes should always start at 0, and should include every int between
			 0 and the value of itemsPerGroup, but not the value of itemsPerGroup itself.

			 Item Markup determined below by <itemMarkup>
		-->
		<!--
			<ItemsRepeaterMarkup itemsPerGroup="2"><![CDATA[ <div class="row">$_Items[0]_$$_Items[1]_$</div>]]></ItemsRepeaterMarkup>
		-->

		<!-- 
			Tokens must be defined in the Field Definition. Definition Developers are encouraged to document their tokens here.
			
			Static Tokens:
			Static Tokens are those which cannot be changed and are replaced with built-in functionality.
				$_EditLink_$
				$_ItemID_$
				$_SortOrder_$
				$_ModuleID_$ (can be used in ModuleInstanceMarkupTop, ModuleInstanceMarkupBottom, ContentMarkup)
				$_JSONNAME_$ (can be used in ModuleInstanceMarkupTop, ModuleInstanceMarkupBottom, ContentMarkup)
		-->
<ItemMarkup><![CDATA[
<div class="col-md-3 sortable-item" data-groups="$categories$">
	$_EditLink_$
	<a class="item-link-wrapper" href="$link$">
		<div class="item-img thumb-holder" style="background-image: url($image$);">
			<img class="sr-only" src="" alt="$title$" />
		</div>
		<h5>$title$</h5>
		<p>$subtitle$</p>
	</a>
</div>
]]></ItemMarkup>
	
		<Scripts>
			<!-- 
			position (optional)
				inHead
				inBody (register script) (default)
				aboveMarkupDefinition
				belowMarkupDefinition
				bottomStartup (register startup script)
				
				preventing multiple instances of the same script from loading:
					set a name on the script element which should only be loaded once. Flexi will check if it's already loaded by another instance of Flexi before loading the script.
					This only works for inHead, inBody and bottomStartup.
			-->
			<Script name="Shuffle.js" src="$_SitePath_$SuperFlexi/Plugins/js/shuffle.js" position="bottomStartup"></Script>
			<Script name="ImagesLoaded" src="$_SitePath_$SuperFlexi/Plugins/js/imagesLoaded.js" position="bottomStartup"></Script>
<Script name="ProjectsJS" position="bottomStartup"><![CDATA[
var PROJECT = (function($) {
	'use strict';

	var $grid = $('.sortable-items'),
		$filterOptions = $('.sort-items'),

		init = function() {


			// None of these need to be executed synchronously
			setTimeout(function() {
				addFilterButtons();
				setupFilters();
			}, 100);

			// You can subscribe to custom events.
			// shrink, shrunk, filter, filtered, sorted, load, done
			$grid.on('loading.shuffle done.shuffle shrink.shuffle shrunk.shuffle filter.shuffle filtered.shuffle sorted.shuffle layout.shuffle', function(evt, shuffle) {
				// Make sure the browser has a console
				if (window.console && window.console.log && typeof window.console.log === 'function') {
					console.log('Shuffle:', evt.type);
				}
			});

			// instantiate the plugin
			$grid.shuffle({
				itemSelector: '.sortable-item',
				delimeter: ', ',
				columnWidth: 220,
				gutterWidth: 20
			});
		},


		addFilterButtons = function() {
			if ($_JSONNAME_$.length) {
				var cats = [],
				    theJSON = $_JSONNAME_$;

				$.each(theJSON, function() {
					var thisCats = this.categories.split(',');

					for (var i = 0; i < thisCats.length; i++) {
						if ($.inArray(thisCats[i].trim(), cats) == -1) {
							cats.push(thisCats[i].trim());
						}
					}
				});

				for (var i = 0; i < cats.length; i++) {
					var catLengths = $('.sortable-item[data-groups*="'+cats[i]+'"]').length;

					$('.sort-items').append('<button class="btn btn-primary" type="button" data-group="' + cats[i].trim() + '" data-count="' + catLengths + '" >' + cats[i].replace(/-/g, ' ').trim() + '</button> ');
				}
			}
		},


		// Set up button clicks
		setupFilters = function() {
			var $btns = $filterOptions.children();
			$btns.on('click', function() {
				var $this = $(this),
					isActive = $this.hasClass('active'),
					group = isActive ? 'all' : $this.data('group');

				// Hide current label, show current label in title
				if (!isActive) {
					$('.sort-items .active').removeClass('active');
				}

				$this.toggleClass('active');

				// Filter elements
				$grid.shuffle('shuffle', group);
			});

			$btns = null;
		};

	return {
		init: init
	};
}(jQuery));

$(document).ready(function() {
	imagesLoaded( $('.sortable-items'), function( instance ) {
		$('.sortable-items').addClass('loaded');
		PROJECT.init();
	});
});
]]></Script>
		</Scripts>
	</MarkupDefinition>
</Definitions>