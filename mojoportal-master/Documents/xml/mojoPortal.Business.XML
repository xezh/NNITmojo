<?xml version="1.0"?>
<doc>
    <assembly>
        <name>mojoPortal.Business</name>
    </assembly>
    <members>
        <member name="T:mojoPortal.Business.BannedIPAddress">
             <summary>
            
             </summary>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.GetBannedIPAddress(System.Int32)">
            <summary>
            Gets an instance of BannedIPAddress.
            </summary>
            <param name="rowId"> rowId </param>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.Create">
            <summary>
            Persists a new instance of BannedIPAddress. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.Update">
            <summary>
            Updates this instance of BannedIPAddress. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.Save">
            <summary>
            Saves this instance of BannedIPAddress. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.Delete(System.Int32)">
            <summary>
            Deletes an instance of BannedIPAddress. Returns true on success.
            </summary>
            <param name="rowId"> rowId </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.IsBanned(System.String)">
            <summary>
            Returns true if the passed in address is banned
            </summary>
            <param name="ipAddress"> ipAddress </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.GetAll">
            <summary>
            Gets an IList with all instances of BannedIPAddress.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.GetPage(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of BannedIPAddresse.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.GeByIpAddress(System.String)">
            <summary>
            Gets an IDataReader with rows from the mp_BannedIPAddresses table.
            </summary>
            <param name="ipAddress"> ipAddress </param>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.CompareByRowId(mojoPortal.Business.BannedIPAddress,mojoPortal.Business.BannedIPAddress)">
            <summary>
            Compares 2 instances of BannedIPAddresse.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.CompareByBannedIP(mojoPortal.Business.BannedIPAddress,mojoPortal.Business.BannedIPAddress)">
            <summary>
            Compares 2 instances of BannedIPAddresse.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.CompareByBannedUtc(mojoPortal.Business.BannedIPAddress,mojoPortal.Business.BannedIPAddress)">
            <summary>
            Compares 2 instances of BannedIPAddresse.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.BannedIPAddress.CompareByBannedReason(mojoPortal.Business.BannedIPAddress,mojoPortal.Business.BannedIPAddress)">
            <summary>
            Compares 2 instances of BannedIPAddresse.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Category.CompareByCategory(mojoPortal.Business.Category,mojoPortal.Business.Category)">
            <summary>
            Compares 2 instances of Category.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Category.CompareByDescription(mojoPortal.Business.Category,mojoPortal.Business.Category)">
            <summary>
            Compares 2 instances of Category.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Category.CompareByItemCount(mojoPortal.Business.Category,mojoPortal.Business.Category)">
            <summary>
            Compares 2 instances of Category.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Category.CompareByCreatedUtc(mojoPortal.Business.Category,mojoPortal.Business.Category)">
            <summary>
            Compares 2 instances of Category.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Category.CompareByModifiedUtc(mojoPortal.Business.Category,mojoPortal.Business.Category)">
            <summary>
            Compares 2 instances of Category.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.CategoryRepository">
            <summary>
            not yet implemented
            </summary>
        </member>
        <member name="M:mojoPortal.Business.CommentRepository.Save(mojoPortal.Business.Comment)">
            <summary>
            Persists a new instance of Comment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.CommentRepository.Fetch(System.Guid)">
            <param name="guid"> guid </param>
        </member>
        <member name="M:mojoPortal.Business.CommentRepository.Delete(System.Guid)">
            <summary>
            Deletes an instance of Comment. Returns true on success.
            </summary>
            <param name="guid"> guid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.CommentRepository.GetCount(System.Guid,System.Int32)">
            <summary>
            Gets a count of Comment. 
            </summary>
        </member>
        <member name="T:mojoPortal.Business.AuthorizeNetLog">
            <summary>
            Represents a log of Authorize.NET activity
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.GetAuthorizeNetLog(System.Guid)">
            <summary>
            Gets an instance of AuthorizeNetLog.
            </summary>
            <param name="rowGuid"> rowGuid </param>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.Create">
            <summary>
            Persists a new instance of AuthorizeNetLog. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.Update">
            <summary>
            Updates this instance of AuthorizeNetLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.Save">
            <summary>
            Saves this instance of AuthorizeNetLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.Delete(System.Guid)">
            <summary>
            Deletes an instance of AuthorizeNetLog. Returns true on success.
            </summary>
            <param name="rowGuid"> rowGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.GetByCart(System.Guid)">
            <summary>
            Gets an IDataReader with rows from the mp_AuthorizeNetLog table.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByCreatedUtc(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByRawResponse(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByResponseCode(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByResponseReasonCode(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByReason(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByAvsCode(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByCcvCode(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByCavCode(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByTransactionId(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByTransactionType(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByMethod(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.AuthorizeNetLog.CompareByAuthCode(mojoPortal.Business.AuthorizeNetLog,mojoPortal.Business.AuthorizeNetLog)">
            <summary>
            Compares 2 instances of AuthorizeNetLog.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.Commerce.MerchantData">
            <summary>
             Represents the serialized state we log and use for various payment providers.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.Commerce.OrderStatus">
            <summary>
            Represents the status of an order
            </summary>
        </member>
        <member name="T:mojoPortal.Business.GoogleCheckoutLog">
            <summary>
            Represents a log of google checkout activity
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.GetGoogleCheckoutLog(System.Guid)">
            <summary>
            Gets an instance of GoogleCheckoutLog.
            </summary>
            <param name="rowGuid"> rowGuid </param>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.GetGoogleCheckoutLog(System.String)">
            <summary>
            Gets an instance of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.Create">
            <summary>
            Persists a new instance of GoogleCheckoutLog. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.Update">
            <summary>
            Updates this instance of GoogleCheckoutLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.Save">
            <summary>
            Saves this instance of GoogleCheckoutLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.Delete(System.Guid)">
            <summary>
            Deletes an instance of GoogleCheckoutLog. Returns true on success.
            </summary>
            <param name="rowGuid"> rowGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.GetCountByCart(System.Guid)">
            <summary>
            Gets a count of GoogleCheckoutLog. 
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.GetCountByStore(System.Guid)">
            <summary>
            Gets a count of GoogleCheckoutLog. 
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.GetPageByCart(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IDataReader with page of instances of GoogleCheckoutLog.
            </summary>
            <param name="cartGuid">The cartGuid</param>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="totalPages">total pages</param>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.GetPageByStore(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IDataReader with page of instances of GoogleCheckoutLog.
            </summary>
            <param name="storeGuid">The storeGuid</param>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="totalPages">total pages</param>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByCreatedUtc(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByNotificationType(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByRawResponse(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareBySerialNumber(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByGTimestamp(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByOrderNumber(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByBuyerId(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByFullfillState(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByFinanceState(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByAvsResponse(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByCvnResponse(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.GoogleCheckoutLog.CompareByAuthExpDate(mojoPortal.Business.GoogleCheckoutLog,mojoPortal.Business.GoogleCheckoutLog)">
            <summary>
            Compares 2 instances of GoogleCheckoutLog.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.PaymentLog">
            <summary>
            Represents a log of payment activity, this class is a consolidation of legacy classes
            AuthorizeNetLog and PlugNPayLog to reduce duplication and simplify adding more payment gateways
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PaymentLog.GetPaymentLog(System.Guid)">
            <summary>
            Gets an instance of PaymentLog.
            </summary>
            <param name="rowGuid"> rowGuid </param>
        </member>
        <member name="M:mojoPortal.Business.PaymentLog.Create">
            <summary>
            Persists a new instance of PaymentLog. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.PaymentLog.Update">
            <summary>
            Updates this instance of PaymentLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.PaymentLog.Save">
            <summary>
            Saves this instance of AuthorizeNetLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.PaymentLog.Delete(System.Guid)">
            <summary>
            Deletes an instance of PaymentLog. Returns true on success.
            </summary>
            <param name="rowGuid"> rowGuid </param>
            <returns>bool</returns>
        </member>
        <member name="T:mojoPortal.Business.PayPalLog">
            <summary>
            Represents a log used to track paypal activity
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.GetPayPalLog(System.Guid)">
            <summary>
            Gets an instance of PayPalLog.
            </summary>
            <param name="rowGuid"> rowGuid </param>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.Create">
            <summary>
            Persists a new instance of PayPalLog. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.Update">
            <summary>
            Updates this instance of PayPalLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.Save">
            <summary>
            Saves this instance of PayPalLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.Delete(System.Guid)">
            <summary>
            Deletes an instance of PayPalLog. Returns true on success.
            </summary>
            <param name="rowGuid"> rowGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.GetByCart(System.Guid)">
            <summary>
            Gets an IDataReader with rows from the mp_PayPalLog table.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByCreatedUtc(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByRequestType(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByApiVersion(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByRawResponse(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByToken(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByPayerId(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByTransactionId(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByPaymentType(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByPaymentStatus(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByPendingReason(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByReasonCode(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PayPalLog.CompareByCurrencyCode(mojoPortal.Business.PayPalLog,mojoPortal.Business.PayPalLog)">
            <summary>
            Compares 2 instances of PayPalLog.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.PlugNPayLog">
            <summary>
            Represents a log of Plug N Pay activity in the AuthNet table
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.GetPlugNPayLog(System.Guid)">
            <summary>
            Gets an instance of PlugNPayLog.
            </summary>
            <param name="rowGuid"> rowGuid </param>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.Create">
            <summary>
            Persists a new instance of PlugNPayLog. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.Update">
            <summary>
            Updates this instance of PlugNPayLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.Save">
            <summary>
            Saves this instance of PlugNPayLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.Delete(System.Guid)">
            <summary>
            Deletes an instance of PlugNPayLog. Returns true on success.
            </summary>
            <param name="rowGuid"> rowGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.GetByCart(System.Guid)">
            <summary>
            Gets an IDataReader with rows from the mp_PlugNPayLog table.
            </summary>
            <param name="cartGuid"> rowGuid </param>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByCreatedUtc(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByRawResponse(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByResponseCode(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByResponseReasonCode(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByReason(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByAvsCode(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByCcvCode(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByCavCode(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByTransactionId(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByTransactionType(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByMethod(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PlugNPayLog.CompareByAuthCode(mojoPortal.Business.PlugNPayLog,mojoPortal.Business.PlugNPayLog)">
            <summary>
            Compares 2 instances of PlugNPayLog.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.TaxCalculator">
             <summary>
            
             </summary>
        </member>
        <member name="T:mojoPortal.Business.TaxClass">
            <summary>
            Represents the taxability of a product or service
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaxClass.CompareByTitle(mojoPortal.Business.TaxClass,mojoPortal.Business.TaxClass)">
            <summary>
            Compares 2 instances of TaxClas.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaxClass.CompareByDescription(mojoPortal.Business.TaxClass,mojoPortal.Business.TaxClass)">
            <summary>
            Compares 2 instances of TaxClas.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaxClass.CompareByLastModified(mojoPortal.Business.TaxClass,mojoPortal.Business.TaxClass)">
            <summary>
            Compares 2 instances of TaxClas.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaxClass.CompareByCreated(mojoPortal.Business.TaxClass,mojoPortal.Business.TaxClass)">
            <summary>
            Compares 2 instances of TaxClas.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.TaxRate">
            <summary>
            Represents a tax rate associated with a geographic location
            </summary>
        </member>
        <member name="T:mojoPortal.Business.CommerceReport">
            <summary>
            A common repository where ecommerce features can push in their sales results.
            This makes it possible to create one set of reports instead of having to create them for each feature.
            It also allows aggregating at the site level across commerce features.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.CommerceReport.AddRow(System.Guid,System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Guid,System.Guid,System.String,System.Int32,System.Decimal,System.Decimal,System.DateTime,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Inserts a row in the mp_CommerceReport table. Returns rows affected count.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.CommerceReport.Delete(System.Guid)">
            <summary>
            Deletes an instance of CommerceReport. Returns true on success.
            </summary>
            <param name="rowGuid"> rowGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.CommerceReport.DeleteBySite(System.Guid)">
            <summary>
            Deletes rows from the mp_CommerceReport table. Returns true if row deleted.
            </summary>
            <param name="siteGuid"> siteGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.CommerceReport.GetUserItemsPage(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of data from the mp_CommerceReport table.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.CommerceReport.GetItemsPageByModule(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of data from the mp_CommerceReport table.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.CommerceReport.GetUserItemPageBySite(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of data from the mp_CommerceReport table.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.CommerceReport.DeleteByModule(System.Guid)">
            <summary>
            Deletes a row from the mp_CommerceReport table. Returns true if row deleted.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.CommerceReport.CreateOrder(System.Guid,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.DateTime,System.String,System.String,System.DateTime,System.Boolean)">
            <summary>
            Inserts a row in the mp_CommerceReportOrders table. Returns rows affected count.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.CommerceReport.DeleteOrder(System.Guid)">
            <summary>
            Deletes a row from the mp_CommerceReportOrders table. Returns true if row deleted.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.GetContentHistory(System.Guid)">
            <summary>
            Gets an instance of ContentHistory.
            </summary>
            <param name="guid"> guid </param>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.Create">
            <summary>
            Persists a new instance of ContentHistory. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.Save">
            <summary>
            Saves this instance of ContentHistory. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.Delete(System.Guid)">
            <summary>
            Deletes an instance of ContentHistory. Returns true on success.
            </summary>
            <param name="guid"> guid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.GetCount(System.Guid)">
            <summary>
            Gets a count of ContentHistory. 
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.GetPage(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of ContentHistory.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.CompareByTitle(mojoPortal.Business.ContentHistory,mojoPortal.Business.ContentHistory)">
            <summary>
            Compares 2 instances of ContentHistory.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.CompareByContentText(mojoPortal.Business.ContentHistory,mojoPortal.Business.ContentHistory)">
            <summary>
            Compares 2 instances of ContentHistory.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.CompareByCustomData(mojoPortal.Business.ContentHistory,mojoPortal.Business.ContentHistory)">
            <summary>
            Compares 2 instances of ContentHistory.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.CompareByCreatedUtc(mojoPortal.Business.ContentHistory,mojoPortal.Business.ContentHistory)">
            <summary>
            Compares 2 instances of ContentHistory.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentHistory.CompareByHistoryUtc(mojoPortal.Business.ContentHistory,mojoPortal.Business.ContentHistory)">
            <summary>
            Compares 2 instances of ContentHistory.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMeta.CompareByName(mojoPortal.Business.ContentMeta,mojoPortal.Business.ContentMeta)">
            <summary>
            Compares 2 instances of ContentMeta.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMeta.CompareByNameProperty(mojoPortal.Business.ContentMeta,mojoPortal.Business.ContentMeta)">
            <summary>
            Compares 2 instances of NameProperty.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMeta.CompareByScheme(mojoPortal.Business.ContentMeta,mojoPortal.Business.ContentMeta)">
            <summary>
            Compares 2 instances of ContentMeta.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMeta.CompareByLangCode(mojoPortal.Business.ContentMeta,mojoPortal.Business.ContentMeta)">
            <summary>
            Compares 2 instances of ContentMeta.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMeta.CompareByDir(mojoPortal.Business.ContentMeta,mojoPortal.Business.ContentMeta)">
            <summary>
            Compares 2 instances of ContentMeta.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMeta.CompareByMetaContent(mojoPortal.Business.ContentMeta,mojoPortal.Business.ContentMeta)">
            <summary>
            Compares 2 instances of ContentMeta.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMeta.CompareByMetaContentProperty(mojoPortal.Business.ContentMeta,mojoPortal.Business.ContentMeta)">
            <summary>
            Compares 2 instances of ContentProperty.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMeta.CompareBySortRank(mojoPortal.Business.ContentMeta,mojoPortal.Business.ContentMeta)">
            <summary>
            Compares 2 instances of ContentMeta.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMeta.CompareByCreatedUtc(mojoPortal.Business.ContentMeta,mojoPortal.Business.ContentMeta)">
            <summary>
            Compares 2 instances of ContentMeta.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMeta.CompareByLastModUtc(mojoPortal.Business.ContentMeta,mojoPortal.Business.ContentMeta)">
            <summary>
            Compares 2 instances of ContentMeta.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaLink.CompareByRel(mojoPortal.Business.ContentMetaLink,mojoPortal.Business.ContentMetaLink)">
            <summary>
            Compares 2 instances of ContentMetaLink.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaLink.CompareByHref(mojoPortal.Business.ContentMetaLink,mojoPortal.Business.ContentMetaLink)">
            <summary>
            Compares 2 instances of ContentMetaLink.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaLink.CompareByHrefLang(mojoPortal.Business.ContentMetaLink,mojoPortal.Business.ContentMetaLink)">
            <summary>
            Compares 2 instances of ContentMetaLink.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaLink.CompareByRev(mojoPortal.Business.ContentMetaLink,mojoPortal.Business.ContentMetaLink)">
            <summary>
            Compares 2 instances of ContentMetaLink.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaLink.CompareByType(mojoPortal.Business.ContentMetaLink,mojoPortal.Business.ContentMetaLink)">
            <summary>
            Compares 2 instances of ContentMetaLink.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaLink.CompareByMedia(mojoPortal.Business.ContentMetaLink,mojoPortal.Business.ContentMetaLink)">
            <summary>
            Compares 2 instances of ContentMetaLink.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaLink.CompareBySortRank(mojoPortal.Business.ContentMetaLink,mojoPortal.Business.ContentMetaLink)">
            <summary>
            Compares 2 instances of ContentMetaLink.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaLink.CompareByCreatedUtc(mojoPortal.Business.ContentMetaLink,mojoPortal.Business.ContentMetaLink)">
            <summary>
            Compares 2 instances of ContentMetaLink.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaLink.CompareByLastModUtc(mojoPortal.Business.ContentMetaLink,mojoPortal.Business.ContentMetaLink)">
            <summary>
            Compares 2 instances of ContentMetaLink.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaRespository.Save(mojoPortal.Business.ContentMeta)">
            <summary>
            Persists a ContentMeta
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaRespository.Save(mojoPortal.Business.ContentMetaLink)">
            <summary>
            Persists a new instance of ContentMetaLink.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaRespository.Delete(System.Guid)">
            <summary>
            Deletes an instance of ContentMeta. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaRespository.DeleteLink(System.Guid)">
            <summary>
            Deletes an instance of ContentMeta. Returns true on success.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaRespository.DeleteBySite(System.Guid)">
            <summary>
            Deletes ContentMeta. Returns true on success.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaRespository.DeleteByModule(System.Guid)">
            <summary>
            Deletes ContentMeta. Returns true on success.
            </summary>
            <param name="moduleGuid"> moduleGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaRespository.DeleteByContent(System.Guid)">
            <summary>
            Deletes ContentMeta. Returns true on success.
            </summary>
            <param name="contentGuid"> contentGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaRespository.GetNextSortRank(System.Guid)">
            <summary>
            gets the next sort rank
            </summary>
            <param name="contentGuid"></param>
            <returns>int</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentMetaRespository.GetNextLinkSortRank(System.Guid)">
            <summary>
            gets the next sort rank
            </summary>
            <param name="contentGuid"></param>
            <returns>int</returns>
        </member>
        <member name="T:mojoPortal.Business.ContentRating">
             <summary>
            
             </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.GetContentRating(System.Guid)">
            <summary>
            Gets an instance of ContentRating.
            </summary>
            <param name="rowGuid"> rowGuid </param>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.GetContentRating(System.Guid,System.Guid)">
            <summary>
            Gets an instance of ContentRating.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.Create">
            <summary>
            Persists a new instance of ContentRating. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.Update">
            <summary>
            Updates this instance of ContentRating. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.Save">
            <summary>
            Saves this instance of ContentRating. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.Delete(System.Guid)">
            <summary>
            Deletes an instance of ContentRating. Returns true on success.
            </summary>
            <param name="rowGuid"> rowGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.GetPage(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of ContentRating.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.CompareByEmailAddress(mojoPortal.Business.ContentRating,mojoPortal.Business.ContentRating)">
            <summary>
            Compares 2 instances of ContentRating.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.CompareByRating(mojoPortal.Business.ContentRating,mojoPortal.Business.ContentRating)">
            <summary>
            Compares 2 instances of ContentRating.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.CompareByComments(mojoPortal.Business.ContentRating,mojoPortal.Business.ContentRating)">
            <summary>
            Compares 2 instances of ContentRating.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.CompareByIpAddress(mojoPortal.Business.ContentRating,mojoPortal.Business.ContentRating)">
            <summary>
            Compares 2 instances of ContentRating.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.CompareByCreatedUtc(mojoPortal.Business.ContentRating,mojoPortal.Business.ContentRating)">
            <summary>
            Compares 2 instances of ContentRating.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentRating.CompareByLastModUtc(mojoPortal.Business.ContentRating,mojoPortal.Business.ContentRating)">
            <summary>
            Compares 2 instances of ContentRating.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.ContentRatingStats">
             <summary>
            
             </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.GetContentStyle(System.Guid)">
            <summary>
            Gets an instance of ContentStyle.
            </summary>
            <param name="guid"> guid </param>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.Create">
            <summary>
            Persists a new instance of ContentStyle. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.Update">
            <summary>
            Updates this instance of ContentStyle. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.Save">
            <summary>
            Saves this instance of ContentStyle. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.Get(System.Guid)">
            <summary>
            Looks up and returns an instance of ContentStyle, if not found returns null.
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.Delete(System.Guid)">
            <summary>
            Deletes an instance of ContentStyle. Returns true on success.
            </summary>
            <param name="guid"> guid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.DeleteBySite(System.Guid)">
            <summary>
            Deletes rows from the mp_ContentStyle table for the passed siteGuid. Returns true if rows deleted.
            </summary>
            <param name="siteGuid"> siteGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.DeleteBySkin(System.Guid,System.String)">
            <summary>
            Deletes rows from the mp_ContentStyle table for the passed siteGuid. Returns true if rows deleted.
            </summary>  
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.MakeActiveBySkin(System.Guid,System.String)">
            <summary>
            Makes all styles of the given skin name active.
            </summary>
            <param name="siteGuid"> siteGuid </param>
            <param name="skinName"> skinName </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.MakeInActiveBySkin(System.Guid,System.String)">
            <summary>
            Makes all styles of the given skin name inactive.
            </summary>
            <param name="siteGuid"> siteGuid </param>
            <param name="skinName"> skinName </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.GetCount(System.Guid)">
            <summary>
            Gets a count of ContentStyle. 
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.GetCount(System.Guid,System.String)">
            <summary>
            Gets a count of ContentStyle. 
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.GetAll(System.Guid)">
            <summary>
            Gets an IList with all instances of ContentStyle.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.GetAll(System.Guid,System.String)">
            <summary>
            Gets an IList with all instances of ContentStyle for the given skin.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.GetAllActive(System.Guid)">
            <summary>
            Gets an IDataReader with all active instances of ContentStyle.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.GetAllActive(System.Guid,System.String)">
            <summary>
            Gets an IDataReader with all active instances of ContentStyle for the given skin.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.GetPage(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of ContentStyle.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.GetPage(System.Guid,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of ContentStyle.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.CompareByName(mojoPortal.Business.ContentStyle,mojoPortal.Business.ContentStyle)">
            <summary>
            Compares 2 instances of ContentStyle.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.CompareByElement(mojoPortal.Business.ContentStyle,mojoPortal.Business.ContentStyle)">
            <summary>
            Compares 2 instances of ContentStyle.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.CompareByCssClass(mojoPortal.Business.ContentStyle,mojoPortal.Business.ContentStyle)">
            <summary>
            Compares 2 instances of ContentStyle.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.CompareBySkinName(mojoPortal.Business.ContentStyle,mojoPortal.Business.ContentStyle)">
            <summary>
            Compares 2 instances of ContentStyle.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.CompareByCreatedUtc(mojoPortal.Business.ContentStyle,mojoPortal.Business.ContentStyle)">
            <summary>
            Compares 2 instances of ContentStyle.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentStyle.CompareByLastModUtc(mojoPortal.Business.ContentStyle,mojoPortal.Business.ContentStyle)">
            <summary>
            Compares 2 instances of ContentStyle.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.GetContentTemplate(System.Guid)">
            <summary>
            Gets an instance of ContentTemplate.
            </summary>
            <param name="guid"> guid </param>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.Create">
            <summary>
            Persists a new instance of ContentTemplate. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.Update">
            <summary>
            Updates this instance of ContentTemplate. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.Save">
            <summary>
            Saves this instance of ContentTemplate. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.Get(System.Guid)">
            <summary>
            Looks up and returns an instance of ContentTemplate, if not found returns null.
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.Delete(System.Guid)">
            <summary>
            Deletes an instance of ContentTemplate. Returns true on success.
            </summary>
            <param name="guid"> guid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.GetCount(System.Guid)">
            <summary>
            Gets a count of ContentTemplate. 
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.GetAll(System.Guid)">
            <summary>
            Gets an IList with all instances of ContentTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.GetPage(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of ContentTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.CompareByTitle(mojoPortal.Business.ContentTemplate,mojoPortal.Business.ContentTemplate)">
            <summary>
            Compares 2 instances of ContentTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.CompareByImageFileName(mojoPortal.Business.ContentTemplate,mojoPortal.Business.ContentTemplate)">
            <summary>
            Compares 2 instances of ContentTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.CompareByDescription(mojoPortal.Business.ContentTemplate,mojoPortal.Business.ContentTemplate)">
            <summary>
            Compares 2 instances of ContentTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.CompareByBody(mojoPortal.Business.ContentTemplate,mojoPortal.Business.ContentTemplate)">
            <summary>
            Compares 2 instances of ContentTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.CompareByAllowedRoles(mojoPortal.Business.ContentTemplate,mojoPortal.Business.ContentTemplate)">
            <summary>
            Compares 2 instances of ContentTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.CompareByCreatedUtc(mojoPortal.Business.ContentTemplate,mojoPortal.Business.ContentTemplate)">
            <summary>
            Compares 2 instances of ContentTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentTemplate.CompareByLastModUtc(mojoPortal.Business.ContentTemplate,mojoPortal.Business.ContentTemplate)">
            <summary>
            Compares 2 instances of ContentTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ContentWorkflow.Save">
            <summary>
            Saves this instance of Content Workflow. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.ContentWorkflow.Update">
            <summary>
            Updates an existing instance of ContentHistory. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.ContentWorkflow.GetPageOfWorkflowsWithPageInfo(System.Guid,mojoPortal.Business.ContentWorkflowStatus,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns a DataSet with a page ContentWorkflow items and their related pagesettings info
            </summary>
            <param name="siteGuid"></param>
            <param name="status"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="totalPages"></param>
            <returns></returns>
        </member>
        <member name="T:mojoPortal.Business.Currency">
             <summary>
            
             </summary>
        </member>
        <member name="T:mojoPortal.Business.Letter">
            <summary>
            Represents an instance of a news letter edition
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.GetLetter(System.Guid)">
            <summary>
            Gets an instance of Letter.
            </summary>
            <param name="letterGuid"> letterGuid </param>
        </member>
        <member name="M:mojoPortal.Business.Letter.Create">
            <summary>
            Persists a new instance of Letter. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.Letter.Update">
            <summary>
            Updates this instance of Letter. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.Letter.TrackSendClicked">
            <summary>
            Records click of the send button. Sending occurs by a task queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.Letter.TrackSendStarted">
            <summary>
            Records the start of sending the letter from the task queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.Letter.TrackSendComplete(System.Int32)">
            <summary>
            Records the completion of sending the letter from the task queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.Letter.Save">
            <summary>
            Saves this instance of Letter. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.Letter.Delete(System.Guid)">
            <summary>
            Deletes an instance of Letter. Returns true on success.
            </summary>
            <param name="letterGuid"> letterGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.Letter.DeleteByLetterInfo(System.Guid)">
            <summary>
            Deletes a row from the mp_Letter table. Returns true if row deleted.
            </summary>
            <param name="letterInfoGuid"> letterInfoGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.Letter.GetAll(System.Guid)">
            <summary>
            Gets an IList with all instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.GetPage(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.GetDrafts(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.CompareBySubject(mojoPortal.Business.Letter,mojoPortal.Business.Letter)">
            <summary>
            Compares 2 instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.CompareByHtmlBody(mojoPortal.Business.Letter,mojoPortal.Business.Letter)">
            <summary>
            Compares 2 instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.CompareByTextBody(mojoPortal.Business.Letter,mojoPortal.Business.Letter)">
            <summary>
            Compares 2 instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.CompareByCreatedUtc(mojoPortal.Business.Letter,mojoPortal.Business.Letter)">
            <summary>
            Compares 2 instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.CompareByLastModUtc(mojoPortal.Business.Letter,mojoPortal.Business.Letter)">
            <summary>
            Compares 2 instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.CompareBySendClickedUtc(mojoPortal.Business.Letter,mojoPortal.Business.Letter)">
            <summary>
            Compares 2 instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.CompareBySendStartedUtc(mojoPortal.Business.Letter,mojoPortal.Business.Letter)">
            <summary>
            Compares 2 instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.CompareBySendCompleteUtc(mojoPortal.Business.Letter,mojoPortal.Business.Letter)">
            <summary>
            Compares 2 instances of Letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Letter.CompareBySendCount(mojoPortal.Business.Letter,mojoPortal.Business.Letter)">
            <summary>
            Compares 2 instances of Letter.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.LetterHtmlTemplate">
            <summary>
            Represents an html template for email news letter
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterHtmlTemplate.GetLetterHtmlTemplate(System.Guid)">
            <summary>
            Gets an instance of LetterHtmlTemplate.
            </summary>
            <param name="guid"> guid </param>
        </member>
        <member name="M:mojoPortal.Business.LetterHtmlTemplate.Create">
            <summary>
            Persists a new instance of LetterHtmlTemplate. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.LetterHtmlTemplate.Update">
            <summary>
            Updates this instance of LetterHtmlTemplate. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterHtmlTemplate.Save">
            <summary>
            Saves this instance of LetterHtmlTemplate. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterHtmlTemplate.Delete(System.Guid)">
            <summary>
            Deletes an instance of LetterHtmlTemplate. Returns true on success.
            </summary>
            <param name="guid"> guid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterHtmlTemplate.GetAll(System.Guid)">
            <summary>
            Gets an IList with all instances of LetterHtmlTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterHtmlTemplate.GetPage(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of LetterHtmlTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterHtmlTemplate.CompareByTitle(mojoPortal.Business.LetterHtmlTemplate,mojoPortal.Business.LetterHtmlTemplate)">
            <summary>
            Compares 2 instances of LetterHtmlTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterHtmlTemplate.CompareByHtml(mojoPortal.Business.LetterHtmlTemplate,mojoPortal.Business.LetterHtmlTemplate)">
            <summary>
            Compares 2 instances of LetterHtmlTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterHtmlTemplate.CompareByLastModUTC(mojoPortal.Business.LetterHtmlTemplate,mojoPortal.Business.LetterHtmlTemplate)">
            <summary>
            Compares 2 instances of LetterHtmlTemplate.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.LetterInfo">
            <summary>
            Represents the definition of a news letter
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.GetLetterInfo(System.Guid)">
            <summary>
            Gets an instance of LetterInfo.
            </summary>
            <param name="letterInfoGuid"> letterInfoGuid </param>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.Create">
            <summary>
            Persists a new instance of LetterInfo. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.Update">
            <summary>
            Updates this instance of LetterInfo. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.Save">
            <summary>
            Saves this instance of LetterInfo. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.GetCount(System.Guid)">
            <summary>
            Gets a count of rows in the mp_LetterInfo table.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.Delete(System.Guid)">
            <summary>
            Deletes an instance of LetterInfo. Returns true on success.
            </summary>
            <param name="letterInfoGuid"> letterInfoGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.UpdateSubscriberCount(System.Guid)">
            <summary>
            Updates the subscriber count on an instance of LetterInfo.
            </summary>
            <param name="letterInfoGuid"> letterInfoGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.GetAll(System.Guid)">
            <summary>
            Gets an IList with all instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.GetPage(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByTitle(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByDescription(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByAvailableToRoles(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByFromAddress(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByFromName(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByReplyToAddress(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareBySendMode(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByRolesThatCanEdit(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByRolesThatCanApprove(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByRolesThatCanSend(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByCreatedUtc(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterInfo.CompareByLastModUtc(mojoPortal.Business.LetterInfo,mojoPortal.Business.LetterInfo)">
            <summary>
            Compares 2 instances of LetterInfo.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.LetterSendLog">
            <summary>
            Represents a log fro tracking the sending of email news letters.
            This allows us to resume if the task is interupted.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.GetLetterSendLog(System.Int32)">
            <summary>
            Gets an instance of LetterSendLog.
            </summary>
            <param name="rowId"> rowId </param>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.Create">
            <summary>
            Persists a new instance of LetterSendLog. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.Update">
            <summary>
            Updates this instance of LetterSendLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.Save">
            <summary>
            Saves this instance of LetterSendLog. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.Delete(System.Int32)">
            <summary>
            Deletes an instance of LetterSendLog. Returns true on success.
            </summary>
            <param name="rowId"> rowId </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.DeleteByLetter(System.Guid)">
            <summary>
            Deletes from the mp_LetterSendLog table for the letterGuid. Returns true if row deleted.
            </summary>
            <param name="letterGuid"> letterGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.GetCount(System.Guid)">
            <summary>
            Gets a count of subscribers a letter was sent to.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.GetPage(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of LetterSendLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.CompareByRowId(mojoPortal.Business.LetterSendLog,mojoPortal.Business.LetterSendLog)">
            <summary>
            Compares 2 instances of LetterSendLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.CompareByEmailAddress(mojoPortal.Business.LetterSendLog,mojoPortal.Business.LetterSendLog)">
            <summary>
            Compares 2 instances of LetterSendLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.CompareByUtc(mojoPortal.Business.LetterSendLog,mojoPortal.Business.LetterSendLog)">
            <summary>
            Compares 2 instances of LetterSendLog.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.LetterSendLog.CompareByErrorMessage(mojoPortal.Business.LetterSendLog,mojoPortal.Business.LetterSendLog)">
            <summary>
            Compares 2 instances of LetterSendLog.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.LetterSubscriber">
            <summary>
            Represents a user subscription to a news letter.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.EmailSendLog.Create(System.Guid,System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.Guid)">
            <summary>
            Inserts a row in the mp_EmailSendLog table. Returns rows affected count.
            </summary>
            <param name="guid"> guid </param>
            <param name="siteGuid"> siteGuid </param>
            <param name="moduleGuid"> moduleGuid </param>
            <param name="specialGuid1"> specialGuid1 </param>
            <param name="specialGuid2"> specialGuid2 </param>
            <param name="toAddress"> toAddress </param>
            <param name="ccAddress"> ccAddress </param>
            <param name="bccAddress"> bccAddress </param>
            <param name="subject"> subject </param>
            <param name="textBody"> textBody </param>
            <param name="htmlBody"> htmlBody </param>
            <param name="type"> type </param>
            <param name="sentUtc"> sentUtc </param>
            <param name="fromAddress"> fromAddress </param>
            <param name="replyTo"> replyTo </param>
            <param name="userGuid"> userGuid </param>
            <returns>int</returns>
        </member>
        <member name="M:mojoPortal.Business.EmailSendLog.Delete(System.Guid)">
            <summary>
            Deletes a row from the mp_EmailSendLog table. Returns true if row deleted.
            </summary>
            <param name="guid"> guid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.EmailSendLog.DeleteBySite(System.Guid)">
            <summary>
            Deletes rows from the mp_EmailSendLog table. Returns true if row deleted.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.EmailSendLog.DeleteByModule(System.Guid)">
            <summary>
            Deletes rows from the mp_EmailSendLog table. Returns true if row deleted.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.EmailSendQueue.Create">
            <summary>
            Persists a new instance of EmailSendQueue. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.EmailSendQueue.Save">
            <summary>
            Saves this instance of EmailSendQueue. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.EmailSendQueue.Delete(System.Guid)">
            <summary>
            Deletes an instance of EmailSendQueue. Returns true on success.
            </summary>
            <param name="guid"> guid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.EmailSendQueue.GetEmailToSend(System.DateTime)">
            <summary>
            Gets an IDataReader with rows from the mp_EmailSendQueue table where DateToSend >= CurrentTime.
            </summary>
            <param name="currentTime"> currentTime </param>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.GetEmailTemplate(System.Guid)">
            <summary>
            Gets an instance of EmailTemplate.
            </summary>
            <param name="guid"> guid </param>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.Create">
            <summary>
            Persists a new instance of EmailTemplate. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.Update">
            <summary>
            Updates this instance of EmailTemplate. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.Save">
            <summary>
            Saves this instance of EmailTemplate. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.Delete(System.Guid)">
            <summary>
            Deletes an instance of EmailTemplate. Returns true on success.
            </summary>
            <param name="guid"> guid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.CompareByName(mojoPortal.Business.EmailTemplate,mojoPortal.Business.EmailTemplate)">
            <summary>
            Compares 2 instances of EmailTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.CompareBySubject(mojoPortal.Business.EmailTemplate,mojoPortal.Business.EmailTemplate)">
            <summary>
            Compares 2 instances of EmailTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.CompareByTextBody(mojoPortal.Business.EmailTemplate,mojoPortal.Business.EmailTemplate)">
            <summary>
            Compares 2 instances of EmailTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.CompareByHtmlBody(mojoPortal.Business.EmailTemplate,mojoPortal.Business.EmailTemplate)">
            <summary>
            Compares 2 instances of EmailTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.CompareByCreatedUtc(mojoPortal.Business.EmailTemplate,mojoPortal.Business.EmailTemplate)">
            <summary>
            Compares 2 instances of EmailTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.EmailTemplate.CompareByLastModUtc(mojoPortal.Business.EmailTemplate,mojoPortal.Business.EmailTemplate)">
            <summary>
            Compares 2 instances of EmailTemplate.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.GetFileAttachment(System.Guid)">
            <summary>
            Gets an instance of FileAttachment.
            </summary>
            <param name="rowGuid"> rowGuid </param>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.Create">
            <summary>
            Persists a new instance of FileAttachment. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.Update">
            <summary>
            Updates this instance of FileAttachment. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.Save">
            <summary>
            Saves this instance of FileAttachment. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.Delete(System.Guid)">
            <summary>
            Deletes an instance of FileAttachment. Returns true on success.
            </summary>
            <param name="rowGuid"> rowGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.DeleteBySite(System.Guid)">
            <summary>
            Deletes rows from the mp_FileAttachment table. Returns true if row deleted.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.DeleteByModule(System.Guid)">
            <summary>
            Deletes rows from the mp_FileAttachment table. Returns true if row deleted.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.DeleteByItem(System.Guid)">
            <summary>
            Deletes rows from the mp_FileAttachment table. Returns true if row deleted.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.SelectByModule(System.Guid)">
            <summary>
            Gets an IDataReader with row sfrom the mp_FileAttachment table.
            </summary>
            <param name="moduleGuid"> moduleGuid </param>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.CompareByServerFileName(mojoPortal.Business.FileAttachment,mojoPortal.Business.FileAttachment)">
            <summary>
            Compares 2 instances of FileAttachment.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.CompareByFileName(mojoPortal.Business.FileAttachment,mojoPortal.Business.FileAttachment)">
            <summary>
            Compares 2 instances of FileAttachment.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.FileAttachment.CompareByCreatedUtc(mojoPortal.Business.FileAttachment,mojoPortal.Business.FileAttachment)">
            <summary>
            Compares 2 instances of FileAttachment.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.GeoCountry">
            <summary>
            Represents a geographic country
            </summary>
        </member>
        <member name="T:mojoPortal.Business.GeoZone">
            <summary>
            Represents a State within a Country
            </summary>
        </member>
        <member name="T:mojoPortal.Business.HtmlContent">
            <summary>
            Represents an instance of Html Content
            </summary>
        </member>
        <member name="P:mojoPortal.Business.HtmlContent.SiteId">
            <summary>
            This is not persisted to the db. It is only set and used when indexing forum threads in the search index.
            Its a convenience because when we queue the task to index on a new thread we can only pass one object.
            So we store extra properties here so we don't need any other objects.
            </summary>
        </member>
        <member name="P:mojoPortal.Business.HtmlContent.SearchIndexPath">
            <summary>
            This is not persisted to the db. It is only set and used when indexing forum threads in the search index.
            Its a convenience because when we queue the task to index on a new thread we can only pass one object.
            So we store extra properties here so we don't need any other objects.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.HtmlContent.GetHtmlContent(System.Int32)">
            <summary>
            Gets an instance of HtmlContent.
            </summary>
            <param name="moduleId">moduleId</param>
        </member>
        <member name="M:mojoPortal.Business.HtmlContent.Create">
            <summary>
            Creates this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.HtmlContent.Update">
            <summary>
            Updates this instance.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.HtmlContent.Save">
            <summary>
            Saves this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.HtmlContent.Delete">
            <summary>
            Deletes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.HtmlContent.ApproveContentForPublishing(System.Guid,System.Guid)">
            <summary>
            Approves a draft and sets it's status as AwaitingPublishing
            </summary>
            <param name="siteGuid"></param>
            <param name="approvalUserGuid"></param>
        </member>
        <member name="M:mojoPortal.Business.HtmlContent.PublishApprovedContent(System.Guid,System.Guid)">
            <summary>
            Publishes an approved content draft.
            </summary>
            <param name="siteGuid"></param>
            <param name="publishingUserGuid"></param>
        </member>
        <member name="T:mojoPortal.Business.ImageHelper">
            <summary>
            A helper class for manipulating images
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ImageHelper.ResizeImage(System.String,System.String,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            http://weblogs.asp.net/gunnarpeipman/archive/2009/04/02/resizing-images-without-loss-of-quality.aspx
            http://nathanaeljones.com/11191_20_Image_Resizing_Pitfalls
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ImageHelper.ResizeImage(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Drawing.Color)">
            <summary>
            http://weblogs.asp.net/gunnarpeipman/archive/2009/04/02/resizing-images-without-loss-of-quality.aspx
            http://nathanaeljones.com/11191_20_Image_Resizing_Pitfalls
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ImageHelper.ResizeAndSquareImage(System.String,System.String,System.Int32,System.Drawing.Color)">
            <summary>
            http://weblogs.asp.net/gunnarpeipman/archive/2009/04/02/resizing-images-without-loss-of-quality.aspx
            http://nathanaeljones.com/11191_20_Image_Resizing_Pitfalls
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ImageHelper.CropImage(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            crops an image and if destFilePath is not empty string it saves it as the new path. otherwise it updates the original
            </summary>
        </member>
        <member name="T:mojoPortal.Business.IndexingQueue">
            <summary>
            Represents a sequential queue for updating the search index.
            Items are queued into the database then processed by a task running on a background thread.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.IndexingQueue.Create">
            <summary>
            Persists a new instance of IndexingQueue. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.IndexingQueue.Save">
            <summary>
            Saves this instance of IndexingQueue. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.IndexingQueue.GetCount">
            <summary>
            Gets a count of rows in the mp_IndexingQueue table.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.IndexingQueue.Delete(System.Int64)">
            <summary>
            Deletes an instance of IndexingQueue. Returns true on success.
            </summary>
            <param name="rowId"> rowId </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.IndexingQueue.GetIndexPaths">
            <summary>
            Gets an DataTable with distinct paths.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.IndexingQueue.GetByPath(System.String)">
            <summary>
            Gets an DataTable with one row from the mp_IndexingQueue table with the passed path.
            </summary>
            <param name="indexPath"> indexPath </param>
        </member>
        <member name="M:mojoPortal.Business.IndexingQueue.CompareByIndexPath(mojoPortal.Business.IndexingQueue,mojoPortal.Business.IndexingQueue)">
            <summary>
            Compares 2 instances of IndexingQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.IndexingQueue.CompareBySerializedItem(mojoPortal.Business.IndexingQueue,mojoPortal.Business.IndexingQueue)">
            <summary>
            Compares 2 instances of IndexingQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.IndexingQueue.CompareByItemKey(mojoPortal.Business.IndexingQueue,mojoPortal.Business.IndexingQueue)">
            <summary>
            Compares 2 instances of IndexingQueue.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.IPAddressHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:mojoPortal.Business.IPAddressHelper.ConvertToLong(System.String)">
            <summary>
            Takes an ip address in standard ipv4 notation and converts to its long representation
            </summary>
            <param name="ipv4Address"></param>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.IPAddressHelper.ConvertToIPAddressString(System.Int64)">
            <summary>
            Takes a long value and converts it to standard ipv4 notation
            </summary>
        </member>
        <member name="T:mojoPortal.Business.Language">
            <summary>
            Represents a language
            </summary>
        </member>
        <member name="T:mojoPortal.Business.FriendlyUrl">
             <summary>
            
             </summary>
        </member>
        <member name="M:mojoPortal.Business.FriendlyUrl.GetPage(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of data from the mp_FriendlyUrls table.
            </summary>
            <param name="siteId">The siteId.</param>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="totalPages">total pages</param>
        </member>
        <member name="T:mojoPortal.Business.LdapHelper">
             <summary>
            
             </summary>
        </member>
        <member name="T:mojoPortal.Business.LdapSettings">
             <summary>
            
             </summary>
        </member>
        <member name="T:mojoPortal.Business.LdapUser">
             <summary>
            
             </summary>
        </member>
        <member name="T:mojoPortal.Business.Module">
            <summary>
            Represents an instance of a feature
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Module.GetPageModules(System.Int32)">
            <summary>
            Returns a DataReader of published pagemodules
            </summary>
        </member>
        <member name="T:mojoPortal.Business.ModuleDefinition">
            <summary>
            Represents a feature that can plug into the content management system.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.ModuleDefinition.DeleteSettingById(System.Int32)">
            <summary>
            update instance setting properties to match definition settings
            for controltype, controlsrc, regexvalidationexpression ans sort
            this is called at the end of an upgrade
            </summary>
        </member>
        <member name="T:mojoPortal.Business.ModuleSettings">
            <summary>
            Represents settings for a feature instance
            </summary>
        </member>
        <member name="T:mojoPortal.Business.PageChangeFrequency">
            <summary>
            Specifies the frequency with which a page's content changes
            this is used for google site map protocol
            </summary>
        </member>
        <member name="F:mojoPortal.Business.PageChangeFrequency.Always">
            <summary>
            Page content aways changes.
            </summary>
        </member>
        <member name="F:mojoPortal.Business.PageChangeFrequency.Hourly">
            <summary>
            Page content changes hourly.
            </summary>
        </member>
        <member name="F:mojoPortal.Business.PageChangeFrequency.Daily">
            <summary>
            Page content changes daily.
            </summary>
        </member>
        <member name="F:mojoPortal.Business.PageChangeFrequency.Weekly">
            <summary>
            Page content changes weekly.
            </summary>
        </member>
        <member name="F:mojoPortal.Business.PageChangeFrequency.Monthly">
            <summary>
            Page content changes monthly.
            </summary>
        </member>
        <member name="F:mojoPortal.Business.PageChangeFrequency.Yearly">
            <summary>
            Page content changes yearly.
            </summary>
        </member>
        <member name="F:mojoPortal.Business.PageChangeFrequency.Never">
            <summary>
            Page content never changes.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.PageModule">
            <summary>
            This class represents an instance of a ContentModule published on
            a page. It is abridge between page class and module class and corresponds
            to the mp_PageModules table
            </summary>
        </member>
        <member name="M:mojoPortal.Business.PageModule.GetPageModulesByPage(System.Int32)">
            <summary>
            Returns all PageModules for the given pageID
            including un published ones
            </summary>
        </member>
        <member name="T:mojoPortal.Business.PageSettings">
            <summary>
            Represents a page in the content management system.
            </summary>
        </member>
        <member name="P:mojoPortal.Business.PageSettings.PubDateUtc">
            <summary>
            this is for future use, only the db part has been implemented so far
            
            </summary>
        </member>
        <member name="P:mojoPortal.Business.PageSettings.LastModUtc">
            <summary>
            This is the last time the page settings were saved
            </summary>
        </member>
        <member name="P:mojoPortal.Business.PageSettings.LastModifiedUtc">
            <summary>
            this is the lastr time a content feature on a page updated the time stamp
            so it represents the last time content changed on the page not the last time
            page settings changed
            </summary>
        </member>
        <member name="T:mojoPortal.Business.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:mojoPortal.Business.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:mojoPortal.Business.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:mojoPortal.Business.Properties.Resources.ContentWorkflowRequiresModuleGuid">
            <summary>
              Looks up a localized string similar to You must.
            </summary>
        </member>
        <member name="P:mojoPortal.Business.Properties.Resources.SiteUserEmailIsRequired">
            <summary>
              Looks up a localized string similar to Email address is required..
            </summary>
        </member>
        <member name="P:mojoPortal.Business.Properties.Resources.SiteUserInvalidEmailFormat">
            <summary>
              Looks up a localized string similar to Email address must be valid format..
            </summary>
        </member>
        <member name="P:mojoPortal.Business.Properties.Resources.SiteUserLoginRequired">
            <summary>
              Looks up a localized string similar to Login is required..
            </summary>
        </member>
        <member name="T:mojoPortal.Business.RedirectInfo">
            <summary>
            Represents urls that have been permanently moved.
            </summary>
        </member>
        <member name="P:mojoPortal.Business.RedirectInfo.ExpireUtc">
            <summary>
            The date that the old url expired or expires
            </summary>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.GetRedirectList(System.Guid)">
            <summary>
            Gets an instance of RedirectList.
            </summary>
            <param name="rowGuid"> rowGuid </param>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.Create">
            <summary>
            Persists a new instance of RedirectList. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.Update">
            <summary>
            Updates this instance of RedirectList. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.Save">
            <summary>
            Saves this instance of RedirectList. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.Delete(System.Guid)">
            <summary>
            Deletes an instance of RedirectList. Returns true on success.
            </summary>
            <param name="rowGuid"> rowGuid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.GetCount(System.Int32)">
            <summary>
            Gets a count of RedirectList. 
            </summary>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.GetPage(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of RedirectList.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.GetBySiteAndUrl(System.Int32,System.String)">
            <summary>
            Gets an IDataReader with one row from the mp_RedirectList table.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.Exists(System.Int32,System.String)">
            <summary>
            returns true if the record exists
            </summary>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.CompareBySiteID(mojoPortal.Business.RedirectInfo,mojoPortal.Business.RedirectInfo)">
            <summary>
            Compares 2 instances of RedirectList.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.CompareByOldUrl(mojoPortal.Business.RedirectInfo,mojoPortal.Business.RedirectInfo)">
            <summary>
            Compares 2 instances of RedirectList.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.CompareByNewUrl(mojoPortal.Business.RedirectInfo,mojoPortal.Business.RedirectInfo)">
            <summary>
            Compares 2 instances of RedirectList.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.CompareByCreatedUtc(mojoPortal.Business.RedirectInfo,mojoPortal.Business.RedirectInfo)">
            <summary>
            Compares 2 instances of RedirectList.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.RedirectInfo.CompareByExpireUtc(mojoPortal.Business.RedirectInfo,mojoPortal.Business.RedirectInfo)">
            <summary>
            Compares 2 instances of RedirectList.
            </summary>
        </member>
        <member name="F:mojoPortal.Business.RegexHelper.RegexEmailValidationPattern">
            <summary>
            a regular expression for validating email addresses, efficient but not completely RFC 822 compliant
            </summary>
        </member>
        <member name="T:mojoPortal.Business.Role">
            <summary>
            Represents a user role.
            </summary>
        </member>
        <member name="P:mojoPortal.Business.Role.MemberCount">
            <summary>
            this is only populated when calling GetbySite
            </summary>
        </member>
        <member name="M:mojoPortal.Business.SavedQuery.CompareByName(mojoPortal.Business.SavedQuery,mojoPortal.Business.SavedQuery)">
            <summary>
            Compares 2 instances of SavedQuery.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.SavedQuery.CompareByStatement(mojoPortal.Business.SavedQuery,mojoPortal.Business.SavedQuery)">
            <summary>
            Compares 2 instances of SavedQuery.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.SavedQuery.CompareByCreatedUtc(mojoPortal.Business.SavedQuery,mojoPortal.Business.SavedQuery)">
            <summary>
            Compares 2 instances of SavedQuery.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.SavedQuery.CompareByLastModUtc(mojoPortal.Business.SavedQuery,mojoPortal.Business.SavedQuery)">
            <summary>
            Compares 2 instances of SavedQuery.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.SavedQueryRespository.Save(mojoPortal.Business.SavedQuery)">
            <summary>
            Persists a new instance of SavedQuery.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.SavedQueryRespository.Fetch(System.Guid)">
            <param name="id"> id </param>
        </member>
        <member name="M:mojoPortal.Business.SavedQueryRespository.Delete(System.Guid)">
            <summary>
            Deletes an instance of SavedQuery. Returns true on success.
            </summary>
            <param name="id"> id </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.SavedQueryRespository.GetAll">
            <summary>
            Gets an IList with all instances of SavedQuery.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.SiteFolder">
            <summary>
            Represents a site folder used to demark a sub site in a multi site installation using folder based child sites.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.SitePersonalization">
            <summary>
            A utility for managing user personalization via the MyPage feature aka WebParts
            </summary>
        </member>
        <member name="T:mojoPortal.Business.SiteSettings">
            <summary>
            The preferred way to obtasin a reference to SiteSettings object is using mojoPortal.Business.WebHelpers.CacheHelper.GetCurrentSiteSettings();
            </summary>
        </member>
        <member name="P:mojoPortal.Business.SiteSettings.PreferredHostName">
            <summary>
            In case multiple host names map to your site and you want to force a particular one.
            For example I want to force urls with hostname mojoportal.com to www.mojoportal.com,
            because my SSL certificate matches www.mojoportal.com but not mojoportal.com
            </summary>
        </member>
        <member name="P:mojoPortal.Business.SiteSettings.PasswordFormat">
            <summary>
            Clear = 0, Hashed = 1, Encrypted = 2, corresponding to MembershipPasswordFormat Enum
            </summary>
        </member>
        <member name="P:mojoPortal.Business.SiteSettings.OpenIdSelectorId">
            <summary>
            https://www.idselector.com/
            </summary>
        </member>
        <member name="P:mojoPortal.Business.SiteSettings.MetaProfile">
            <summary>
            if you are using vocabularies such as Dublin Core in your page meta data, you can specify the profile which will be added to the head element
            http://dublincore.org/documents/dcq-html/
            ie for Dublin Core you would put http://dublincore.org/documents/dcq-html/ 
            if using multiple vocabularies you can separe the urls by white space
            </summary>
        </member>
        <member name="P:mojoPortal.Business.SiteSettings.RequireApprovalBeforeLogin">
            <summary>
            when a new user registers, if this is true then they cannot login until approved
            </summary>
        </member>
        <member name="M:mojoPortal.Business.SiteSettings.SyncRelatedSites(mojoPortal.Business.SiteSettings,System.Boolean)">
            <summary>
            when using related sites mode this mthod is used to sync shared settings across sites when the parent site is updated
            </summary>
        </member>
        <member name="P:mojoPortal.Business.SiteUser.PasswordHash">
            <summary>
            since aspnet identity doesn't directly support salt
            we have to store the hash, the salt and the format in a single field
            so our custom hasher will have it
            http://www.asp.net/identity/overview/migrations/migrating-an-existing-website-from-sql-membership-to-aspnet-identity
            https://aspnetidentity.codeplex.com/workitem/2333
            </summary>
        </member>
        <member name="M:mojoPortal.Business.SiteUser.GetUserCountByYearMonth(System.Int32)">
            <summary>
            Gets Data for a user registration by month chart. Fields Y, M, Label, Users
            Label is just a concat of Year-Month, Users is the count.
            </summary>
            <param name="siteId"></param>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.SiteUser.UpdateTotalRevenue">
            <summary>
            updates the total revenue for all users
            </summary>
        </member>
        <member name="T:mojoPortal.Business.Statistics.MembershipStatistics">
            <summary>
            
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Tag.CompareByTag(mojoPortal.Business.Tag,mojoPortal.Business.Tag)">
            <summary>
            Compares 2 instances of Tag.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Tag.CompareByCreatedUtc(mojoPortal.Business.Tag,mojoPortal.Business.Tag)">
            <summary>
            Compares 2 instances of Tag.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.Tag.CompareByModifiedUtc(mojoPortal.Business.Tag,mojoPortal.Business.Tag)">
            <summary>
            Compares 2 instances of Tag.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.ITaskQueueTask">
            <summary>
            
            </summary>
        </member>
        <member name="T:mojoPortal.Business.SerializationHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:mojoPortal.Business.SerializationHelper.DeserializeFromString(System.Type,System.String)">
            <summary>
            Deserializes an object from an xml string
            </summary>
            <param name="type"></param>
            <param name="serializedObject"></param>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.SerializationHelper.SerializeToString(System.Object)">
            <summary>
            Serializes a serializable object to xml string
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:mojoPortal.Business.TaskMonitor">
            <summary>
            Summary description for TaskMonitor.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.TaskQueue">
            <summary>
            Represents a queue for tasks run on a bcakcground thread
            </summary>
        </member>
        <member name="P:mojoPortal.Business.TaskQueue.UpdateFrequency">
            <summary>
            The frequency in seconds at which task status updates are expected.
            If no update to taskqueue status for within this value the task is considered stalled.
            </summary>
        </member>
        <member name="P:mojoPortal.Business.TaskQueue.CompleteRatio">
            <summary>
            A value between 0 and 1 indicating percent complete where 1 = 100%, 0.5 = 50%, etc.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.GetTaskQueue(System.Guid)">
            <summary>
            Gets an instance of TaskQueue.
            </summary>
            <param name="guid"> guid </param>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.Create">
            <summary>
            Persists a new instance of TaskQueue. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.Update">
            <summary>
            Updates this instance of TaskQueue. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.Save">
            <summary>
            Saves this instance of TaskQueue. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.Delete(System.Guid)">
            <summary>
            Deletes an instance of TaskQueue. Returns true on success.
            </summary>
            <param name="guid"> guid </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.DeleteCompleted">
            <summary>
            Deletes all completed tasks 
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.GetTasksNotStarted">
            <summary>
            Gets an IList with all instances of TaskQueue that have not been started yet.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.GetTasksForNotification">
            <summary>
            Gets an IList with all instances of TaskQueue that have completed but not been notified.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.GetUnfinished">
            <summary>
            Gets an IList with all instances of TaskQueue that have not finished running yet.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.GetUnfinished(System.Guid)">
            <summary>
            Gets an IList with all site specific instances of TaskQueue that have not finished running yet.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.GetPage(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.GetPageBySite(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of site specific instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.GetPageUnfinished(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.GetPageUnfinishedBySite(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of site specific instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.CompareByTaskName(mojoPortal.Business.TaskQueue,mojoPortal.Business.TaskQueue)">
            <summary>
            Compares 2 instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.CompareByQueuedUTC(mojoPortal.Business.TaskQueue,mojoPortal.Business.TaskQueue)">
            <summary>
            Compares 2 instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.CompareByStartUTC(mojoPortal.Business.TaskQueue,mojoPortal.Business.TaskQueue)">
            <summary>
            Compares 2 instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.CompareByCompleteUTC(mojoPortal.Business.TaskQueue,mojoPortal.Business.TaskQueue)">
            <summary>
            Compares 2 instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.CompareByLastStatusUpdateUTC(mojoPortal.Business.TaskQueue,mojoPortal.Business.TaskQueue)">
            <summary>
            Compares 2 instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.CompareByStatus(mojoPortal.Business.TaskQueue,mojoPortal.Business.TaskQueue)">
            <summary>
            Compares 2 instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.CompareBySerializedTaskObject(mojoPortal.Business.TaskQueue,mojoPortal.Business.TaskQueue)">
            <summary>
            Compares 2 instances of TaskQueue.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.TaskQueue.CompareBySerializedTaskType(mojoPortal.Business.TaskQueue,mojoPortal.Business.TaskQueue)">
            <summary>
            Compares 2 instances of TaskQueue.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.ThreadSleepTask">
            <summary>
            This is just a task for testing purposes. 
            It can be configured how long to run and how long to sleep in between reporting.
            
            </summary>
        </member>
        <member name="P:mojoPortal.Business.ThreadSleepTask.UpdateFrequency">
            <summary>
            The frequency in minutes at which task status updates are expected.
            If no update to taskqueue status for 3x this value the taks is considered stalled.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.UserLocation">
            <summary>
            Represents a user location aka ip address for tracking user ip addresses
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.GetUserLocation(System.Guid)">
            <summary>
            Gets an instance of UserLocation.
            </summary>
            <param name="rowID"> rowID </param>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.Create">
            <summary>
            Persists a new instance of UserLocation. Returns true on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.Update">
            <summary>
            Updates this instance of UserLocation. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.Save">
            <summary>
            Saves this instance of UserLocation. Returns true on success.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.Delete(System.Guid)">
            <summary>
            Deletes an instance of UserLocation. Returns true on success.
            </summary>
            <param name="rowID"> rowID </param>
            <returns>bool</returns>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.GetCountByUser(System.Guid)">
            <summary>
            Gets a count of UserLocation. 
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.GetCountBySite(System.Guid)">
            <summary>
            Gets a count of UserLocation. 
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.GetByUser(System.Guid)">
            <summary>
            Gets an IList with all instances of UserLocation for the user.
            </summary>
            <param name="userGuid"> userGuid </param>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.GetBySite(System.Guid)">
            <summary>
            Gets an IList with all instances of UserLocation for the site.
            </summary>
            <param name="siteGuid"> siteGuid </param>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.GetPageByUser(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of UserLocation.
            </summary>
            <param name="userGuid"> userGuid </param>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="totalPages">total pages</param>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.GetPageBySite(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets an IList with page of instances of UserLocation.
            </summary>
            <param name="siteGuid"> siteGuid </param>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="totalPages">total pages</param>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.GetUsersByIPAddress(System.Guid,System.String)">
            <summary>
            Gets an IDataReader with rows from the mp_Users table which have the passed in IP Address
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByIPAddress(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByHostname(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByISP(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByContinent(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByCountry(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByRegion(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByCity(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByTimeZone(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByCaptureCount(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByFirstCaptureUTC(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="M:mojoPortal.Business.UserLocation.CompareByLastCaptureUTC(mojoPortal.Business.UserLocation,mojoPortal.Business.UserLocation)">
            <summary>
            Compares 2 instances of UserLocation.
            </summary>
        </member>
        <member name="T:mojoPortal.Business.UserPage">
            <summary>
            Represents persoanlized pages created by the user within the MyPage feature aka WebParts
            </summary>
        </member>
        <member name="T:mojoPortal.Business.WebPartContent">
            <summary>
            Represents webparts used on content pages without personalization state,because content pages have no webpart manager.
            </summary>
        </member>
    </members>
</doc>
