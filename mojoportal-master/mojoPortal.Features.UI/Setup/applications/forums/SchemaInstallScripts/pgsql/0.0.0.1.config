
CREATE SEQUENCE mp_forumposts_postid_seq
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


CREATE SEQUENCE mp_forums_itemid_seq
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;

CREATE SEQUENCE mp_forumsubscriptions_subscriptionid_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


CREATE SEQUENCE mp_forumthreads_threadid_seq
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


CREATE SEQUENCE mp_forumthreadsubscriptions_threadsubscriptionid_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;
    
CREATE TABLE mp_forums (
    itemid integer DEFAULT nextval(('"mp_forums_itemid_seq"'::text)::regclass) NOT NULL,
    moduleid integer NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::timestamp(3) with time zone NOT NULL,
    createdby integer NOT NULL,
    title character varying(100) NOT NULL,
    description text NOT NULL,
    ismoderated boolean DEFAULT false NOT NULL,
    isactive boolean DEFAULT true NOT NULL,
    sortorder integer DEFAULT 100 NOT NULL,
    threadcount integer DEFAULT 0 NOT NULL,
    postcount integer DEFAULT 0 NOT NULL,
    mostrecentpostdate timestamp without time zone,
    mostrecentpostuserid integer DEFAULT -1 NOT NULL,
    postsperpage integer DEFAULT 10 NOT NULL,
    threadsperpage integer DEFAULT 40 NOT NULL,
    allowanonymousposts boolean DEFAULT true NOT NULL
);



CREATE TABLE mp_forumposts (
    postid integer DEFAULT nextval(('"mp_forumposts_postid_seq"'::text)::regclass) NOT NULL,
    threadid integer NOT NULL,
    threadsequence integer DEFAULT 1 NOT NULL,
    subject character varying(255) NOT NULL,
    postdate timestamp without time zone DEFAULT ('now'::text)::timestamp(3) with time zone NOT NULL,
    approved boolean DEFAULT false NOT NULL,
    userid integer DEFAULT -1 NOT NULL,
    sortorder integer DEFAULT 100 NOT NULL,
    post text NOT NULL
);

CREATE TABLE mp_forumsubscriptions (
    subscriptionid integer DEFAULT nextval(('"mp_forumsubscriptions_subscriptionid_seq"'::text)::regclass) NOT NULL,
    forumid integer NOT NULL,
    userid integer NOT NULL,
    subscribedate timestamp without time zone DEFAULT ('now'::text)::timestamp(3) with time zone NOT NULL,
    unsubscribedate timestamp without time zone
);



CREATE TABLE mp_forumthreads (
    threadid integer DEFAULT nextval(('"mp_forumthreads_threadid_seq"'::text)::regclass) NOT NULL,
    forumid integer NOT NULL,
    threadsubject character varying(255) NOT NULL,
    threaddate timestamp without time zone DEFAULT ('now'::text)::timestamp(3) with time zone NOT NULL,
    totalviews integer DEFAULT 0 NOT NULL,
    totalreplies integer DEFAULT 0 NOT NULL,
    sortorder integer DEFAULT 1000 NOT NULL,
    islocked boolean DEFAULT false NOT NULL,
    forumsequence integer DEFAULT 1 NOT NULL,
    mostrecentpostdate timestamp without time zone DEFAULT ('now'::text)::timestamp(3) with time zone,
    mostrecentpostuserid integer,
    startedbyuserid integer NOT NULL
);

CREATE TABLE mp_forumthreadsubscriptions (
    threadsubscriptionid integer DEFAULT nextval(('"mp_forumthreadsubscriptions_threadsubscriptionid_seq"'::text)::regclass) NOT NULL,
    threadid integer NOT NULL,
    userid integer NOT NULL,
    subscribedate timestamp without time zone DEFAULT ('now'::text)::timestamp(3) with time zone NOT NULL,
    unsubscribedate timestamp without time zone
);


CREATE TYPE mp_forumposts_selectallbythread_type AS (
	postid integer,
	threadid integer,
	threadsequence integer,
	subject character varying(255),
	postdate timestamp without time zone,
	approved boolean,
	userid integer,
	sortorder integer,
	post text,
	forumid integer,
	mostrecentpostuser character varying(50),
	startedby character varying(50),
	postauthor character varying(50),
	authoremail character varying(100),
	postauthortotalposts integer,
	trusted boolean,
	postauthoravatar character varying(255),
	postauthorwebsiteurl character varying(100),
	postauthorsignature character varying(255)
);



CREATE TYPE mp_forumposts_selectbythread_type AS (
	postid integer,
	threadid integer,
	threadsequence integer,
	subject character varying(255),
	postdate timestamp without time zone,
	approved boolean,
	userid integer,
	sortorder integer,
	post text,
	forumid integer,
	mostrecentpostuser character varying(50),
	startedby character varying(50),
	postauthor character varying(50),
	authoremail character varying(100),
	trusted boolean,
	postauthortotalposts integer,
	postauthoravatar character varying(255),
	postauthorwebsiteurl character varying(100),
	postauthorsignature character varying(255)
);


CREATE TYPE mp_forumposts_selectbythread_v2_type AS (
	postid integer,
	threadid integer,
	threadsequence integer,
	subject character varying(255),
	postdate timestamp without time zone,
	approved boolean,
	userid integer,
	sortorder integer,
	post text,
	forumid integer,
	mostrecentpostuser character varying(50),
	startedby character varying(50),
	postauthor character varying(50),
	postauthortotalposts integer,
	postauthoravatar character varying(255),
	postauthorwebsiteurl character varying(100),
	postauthorsignature character varying(255)
);



CREATE TYPE mp_forumposts_selectforrss_type AS (
	postid integer,
	threadid integer,
	threadsequence integer,
	subject character varying(255),
	postdate timestamp without time zone,
	approved boolean,
	userid integer,
	sortorder integer,
	post text,
	threadsubject character varying(255),
	forumid integer,
	startedby character varying(50),
	postauthor character varying(50),
	postauthortotalposts integer,
	postauthoravatar character varying(255),
	postauthorwebsiteurl character varying(100),
	postauthorsignature character varying(255)
);



CREATE TYPE mp_forums_select_type AS (
	itemid integer,
	moduleid integer,
	createddate timestamp without time zone,
	createdby integer,
	title character varying(100),
	description text,
	ismoderated boolean,
	isactive boolean,
	sortorder integer,
	threadcount integer,
	postcount integer,
	mostrecentpostdate timestamp without time zone,
	mostrecentpostuserid integer,
	postsperpage integer,
	threadsperpage integer,
	allowanonymousposts boolean,
	mostrecentpostuser character varying(50),
	subscribed boolean
);


CREATE TYPE mp_forums_selectone_type AS (
	itemid integer,
	moduleid integer,
	createddate timestamp without time zone,
	createdby integer,
	title character varying(100),
	description text,
	ismoderated boolean,
	isactive boolean,
	sortorder integer,
	threadcount integer,
	postcount integer,
	mostrecentpostdate timestamp without time zone,
	mostrecentpostuserid integer,
	postsperpage integer,
	threadsperpage integer,
	allowanonymousposts boolean,
	createdbyuser character varying(50),
	mostrecentpostuser character varying(50)
);


CREATE TYPE mp_forumthreads_selectbyforum_type AS (
	threadid integer,
	forumid integer,
	threadsubject character varying(255),
	threaddate timestamp without time zone,
	totalviews integer,
	totalreplies integer,
	sortorder integer,
	islocked boolean,
	forumsequence integer,
	mostrecentpostdate timestamp without time zone,
	mostrecentpostuserid integer,
	startedbyuserid integer,
	mostrecentpostuser character varying(50),
	startedby character varying(50)
);



CREATE TYPE mp_forumthreads_selectbyforumdesc_type AS (
	threadid integer,
	forumid integer,
	threadsubject character varying(255),
	threaddate timestamp without time zone,
	totalviews integer,
	totalreplies integer,
	sortorder integer,
	islocked boolean,
	forumsequence integer,
	mostrecentpostdate timestamp without time zone,
	mostrecentpostuserid integer,
	startedbyuserid integer,
	mostrecentpostuser character varying(50),
	startedby character varying(50)
);


CREATE TYPE mp_forumthreads_selectbyforumdesc_v2_type AS (
	threadid integer,
	forumid integer,
	threadsubject character varying(255),
	threaddate timestamp without time zone,
	totalviews integer,
	totalreplies integer,
	sortorder integer,
	islocked boolean,
	forumsequence integer,
	mostrecentpostdate timestamp without time zone,
	mostrecentpostuserid integer,
	startedbyuserid integer,
	mostrecentpostuser character varying(50),
	startedby character varying(50)
);


CREATE TYPE mp_forumthreads_selectbypage_type AS (
	threadid integer,
	postid integer,
	subject character varying(255),
	post text,
	moduleid integer,
	itemid integer,
	moduletitle character varying(255),
	featurename character varying(255)
);


CREATE TYPE mp_forumthreads_selectone_type AS (
	threadid integer,
	forumid integer,
	threadsubject character varying(255),
	threaddate timestamp without time zone,
	totalviews integer,
	totalreplies integer,
	sortorder integer,
	islocked boolean,
	forumsequence integer,
	mostrecentpostdate timestamp without time zone,
	mostrecentpostuserid integer,
	startedbyuserid integer,
	mostrecentpostuser character varying(50),
	startedby character varying(50),
	postsperpage integer
);



CREATE TYPE mp_forumthreadsubscribers_selectbythread_type AS (
	email character varying(100)
);








CREATE FUNCTION mp_forum_delete(integer) RETURNS integer
    AS $_$
declare
	_itemid alias for $1;
	_rowcount int;
begin

delete from mp_forumposts
where threadid IN (SELECT threadid FROM mp_forumthreads
					WHERE forumid =  _itemid);
					
delete from mp_forumthreadsubscriptions
where threadid IN (SELECT threadid FROM mp_forumthreads
					WHERE forumid =  _itemid);
					
delete from mp_forumthreads
where forumid = _itemid;

delete from mp_forumsubscriptions
where forumid = _itemid;

delete from mp_forums
where itemid = _itemid;
    
    
GET DIAGNOSTICS _rowcount = ROW_COUNT;

return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 54 (class 1255 OID 27037)
-- Dependencies: 3
-- Name: mp_forumposts_countbythread(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_countbythread(integer) RETURNS integer
    AS $_$
select	cast(count(*) as int4)
from		mp_forumposts
where	threadid = $1; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 55 (class 1255 OID 27038)
-- Dependencies: 3 1141
-- Name: mp_forumposts_delete(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_delete(integer) RETURNS integer
    AS $_$
declare
	_postid alias for $1;
	_rowcount int4;
begin

	delete from  mp_forumposts
where postid = _postid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 57 (class 1255 OID 27039)
-- Dependencies: 1141 3
-- Name: mp_forumposts_insert(integer, character varying, text, boolean, integer, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_insert(integer, character varying, text, boolean, integer, timestamp without time zone) RETURNS integer
    AS $_$
declare
	_threadid alias for $1;
	_subject alias for $2;
	_post alias for $3;
	_approved alias for $4;
	_userid alias for $5;
	_postdate alias for $6;
	 _threadsequence int;
	_itemid int;

begin

_threadsequence := (select coalesce(max(threadsequence) + 1,1) from mp_forumposts where threadid = _threadid);
insert into		mp_forumposts
(
			threadid,
			subject,
			post,
			approved,
			userid,
			threadsequence,
			postdate
)
values
(
			_threadid,
			_subject,
			_post,
			_approved,
			_userid,
			_threadsequence,
			_postdate
);

select into _itemid cast(currval('mp_forumposts_postid_seq') as int4); 
return _itemid;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 347 (class 1255 OID 32621)
-- Dependencies: 3 991
-- Name: mp_forumposts_selectallbythread(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_selectallbythread(integer) RETURNS SETOF mp_forumposts_selectallbythread_type
    AS $_$
select	
		p.postid ,
		p.threadid ,
		p.threadsequence ,
		p.subject ,
		p.postdate ,
		p.approved ,
		p.userid ,
		p.sortorder ,
		p.post ,
		ft.forumid,
		coalesce(u.name,'guest') as mostrecentpostuser,
		coalesce(s.name,'guest') as startedby,
		coalesce(up.name, 'guest') as postauthor,
		coalesce(up.email, '') as authoremail,
		COALESCE(up.totalposts, 0) as postauthortotalposts,
		COALESCE(up.trusted, false) as trusted,
		coalesce(up.avatarurl, 'blank.gif') as postauthoravatar,
		up.websiteurl as postauthorwebsiteurl,
		up.signature as postauthorsignature
from		mp_forumposts p
join		mp_forumthreads ft
on		p.threadid = ft.threadid
left outer join		mp_users u
on		ft.mostrecentpostuserid = u.userid
left outer join		mp_users s
on		ft.startedbyuserid = s.userid
left outer join		mp_users up
on		up.userid = p.userid
where	ft.threadid = $1
		
order by	p.postid ; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 348 (class 1255 OID 32622)
-- Dependencies: 991 3
-- Name: mp_forumposts_selectallbythreadreversesorted(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_selectallbythreadreversesorted(integer) RETURNS SETOF mp_forumposts_selectallbythread_type
    AS $_$
select	
		p.postid ,
		p.threadid ,
		p.threadsequence ,
		p.subject ,
		p.postdate ,
		p.approved ,
		p.userid ,
		p.sortorder ,
		p.post ,
		ft.forumid,
		coalesce(u.name,'guest') as mostrecentpostuser,
		coalesce(s.name,'guest') as startedby,
		coalesce(up.name, 'guest') as postauthor,
		coalesce(up.email, '') as authoremail,
		COALESCE(up.totalposts, 0) as postauthortotalposts,
		COALESCE(up.trusted, false) as trusted,
		coalesce(up.avatarurl, 'blank.gif') as postauthoravatar,
		up.websiteurl as postauthorwebsiteurl,
		up.signature as postauthorsignature
from		mp_forumposts p
join		mp_forumthreads ft
on		p.threadid = ft.threadid
left outer join		mp_users u
on		ft.mostrecentpostuserid = u.userid
left outer join		mp_users s
on		ft.startedbyuserid = s.userid
left outer join		mp_users up
on		up.userid = p.userid
where	ft.threadid = $1
		
order by	p.threadsequence desc ; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 350 (class 1255 OID 32626)
-- Dependencies: 993 1141 3
-- Name: mp_forumposts_selectbythread(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_selectbythread(integer, integer) RETURNS SETOF mp_forumposts_selectbythread_type
    AS $_$
declare
	_threadid alias for $1;
	_pagenumber alias for $2;
	 _postsperpage	int;
	 _totalposts		int;
	 _currentpagemaxthreadsequence	int;
	 _beginsequence int;
	 _endsequence int;
	_rec mp_forumposts_selectbythread_type%ROWTYPE;

begin

select into _postsperpage, _totalposts 
	f.postsperpage, ft.totalreplies
from		mp_forumthreads ft
join		mp_forums f
on		ft.forumid = f.itemid
where	ft.threadid = _threadid;

_currentpagemaxthreadsequence := (_postsperpage * _pagenumber) ;

if _currentpagemaxthreadsequence > _postsperpage then
		_beginsequence := _currentpagemaxthreadsequence - _postsperpage + 1;
else
		_beginsequence := 1;
end if;

_endsequence := _beginsequence + _postsperpage  -1;

for _rec in
	select	
			p.postid ,
			p.threadid ,
			p.threadsequence ,
			p.subject ,
			p.postdate ,
			p.approved ,
			p.userid ,
			p.sortorder ,
			p.post ,
			ft.forumid,
			coalesce(u.name,'guest') as mostrecentpostuser,
			coalesce(s.name,'guest') as startedby,
			coalesce(up.name, 'guest') as postauthor,
			coalesce(up.email, '') as authoremail,
			coalesce(up.trusted, false) as trusted,
			up.totalposts as postauthortotalposts,
			coalesce(up.AvatarUrl, 'blank.gif') as postauthoravatar,
			up.websiteurl as postauthorwebsiteurl,
			up.signature as postauthorsignature
	from		mp_forumposts p
	join		mp_forumthreads ft
	on		p.threadid = ft.threadid
	left outer join		mp_users u
	on		ft.mostrecentpostuserid = u.userid
	left outer join		mp_users s
	on		ft.startedbyuserid = s.userid
	left outer join		mp_users up
	on		up.userid = p.userid
	where	ft.threadid = _threadid
			and p.threadsequence >= _beginsequence
			and  p.threadsequence <= _endsequence
	order by	p.sortorder, p.postid   
loop
	return next _rec;
end loop;
return;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 351 (class 1255 OID 32634)
-- Dependencies: 3 1141 997
-- Name: mp_forumposts_selectbythread_v2(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_selectbythread_v2(integer, integer) RETURNS SETOF mp_forumposts_selectbythread_v2_type
    AS $_$
declare
	_threadid alias for $1;
	_pagenumber alias for $2;
	 _postsperpage	int;
	 _totalposts		int;
	 _currentpagemaxthreadsequence	int;
	 _beginsequence int;
	 _endsequence int;
	 _pagelowerbound int;
	 _pageupperbound int;
	_rec mp_forumposts_selectbythread_v2_type%ROWTYPE;

begin

select into _postsperpage, _totalposts 
		f.postsperpage, ft.totalreplies
from		mp_forumthreads ft
join		mp_forums f
on		ft.forumid = f.itemid
where	ft.threadid = _threadid;

_currentpagemaxthreadsequence := (_postsperpage * _pagenumber) ;

if (_currentpagemaxthreadsequence > _postsperpage) then
		_beginsequence := _currentpagemaxthreadsequence  - _postsperpage + 1;
else
		_beginsequence := 1;
end if;

_endsequence := _beginsequence + _postsperpage  -1;
--
--
-- set the page bounds
--_pagelowerbound := (_postsperpage * _pagenumber) ;
--_pageupperbound := _pagelowerbound + _postsperpage + 1;
-- create a temp table to store the select results

for _rec in
	select	
			p.postid ,
			p.threadid ,
			p.threadsequence ,
			p.subject ,
			p.postdate ,
			p.approved ,
			p.userid ,
			p.sortorder ,
			p.post ,
			ft.forumid,
			u.name as mostrecentpostuser,
			s.name as startedby,
			up.name as postauthor,
			up.totalposts as postauthortotalposts,
			up.avatarurl as postauthoravatar,
			up.websiteurl as postauthorwebsiteurl,
			up.signature as postauthorsignature
	from		mp_forumposts p
	join		mp_forumthreads ft
	on		p.threadid = ft.threadid
	join		mp_users u
	on		ft.mostrecentpostuserid = u.userid
	join		mp_users s
	on		ft.startedbyuserid = s.userid
	join		mp_users up
	on		up.userid = p.userid
	where	ft.threadid = _threadid
			and p.threadsequence >= _beginsequence
			and  p.threadsequence <= _endsequence
	order by	p.sortorder, p.postid
loop
	return next _rec;
end loop;
return;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 349 (class 1255 OID 32630)
-- Dependencies: 995 3
-- Name: mp_forumposts_selectforrss(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_selectforrss(integer, integer, integer, integer, integer, integer) RETURNS SETOF mp_forumposts_selectforrss_type
    AS $_$
select		fp.postid ,
		fp.threadid,
		fp.threadsequence,
		fp.subject,
		fp.postdate,
		fp.approved,
		fp.userid,
		fp.sortorder,
		fp.post,
		ft.threadsubject,
		ft.forumid,
		coalesce(s.name, 'Guest') as startedby,
		coalesce(up.name, 'Guest') as postauthor,
		up.totalposts as postauthortotalposts,
		up.avatarurl as postauthoravatar,
		up.websiteurl as postauthorwebsiteurl,
		up.signature as postauthorsignature


from		mp_forumposts fp

join		mp_forumthreads ft
on		fp.threadid = ft.threadid

join		mp_forums f
on		ft.forumid = f.itemid

join		mp_modules m
on		f.moduleid = m.moduleid

join		mp_pagemodules pm
on		m.moduleid = pm.moduleid

join		mp_pages p
on		pm.pageid = p.pageid

left outer join		mp_users u
on		ft.mostrecentpostuserid = u.userid

left outer join		mp_users s
on		ft.startedbyuserid = s.userid

left outer join		mp_users up
on		up.userID = fp.userid

where	p.siteid = $1
and	($2 = -1 OR p.pageid = $2)
and	($3 = -1 OR m.moduleid = $3)
and	($4 = -1 OR f.itemid = $4)
and	($5 = -1 OR ft.threadid = $5)
and	($6 = -1 OR (current_timestamp(3) - fp.PostDate) <= (to_char($6, '999999') || 'days')::interval)

order by	fp.PostDate desc;$_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 69 (class 1255 OID 27057)
-- Dependencies: 806 3
-- Name: mp_forumposts_selectone(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_selectone(integer) RETURNS SETOF mp_forumposts
    AS $_$
select	fp.*
from		mp_forumposts fp
where	fp.postid = $1; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 171 (class 1255 OID 27558)
-- Dependencies: 3 806
-- Name: mp_forumposts_selectsortedthread(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_selectsortedthread(integer) RETURNS SETOF mp_forumposts
    AS $_$
select	fp.*
from		mp_forumposts fp
where	fp.threadid = $1
order by threadsequence; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 65 (class 1255 OID 27058)
-- Dependencies: 1141 3
-- Name: mp_forumposts_update(integer, character varying, text, integer, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_update(integer, character varying, text, integer, boolean) RETURNS integer
    AS $_$
declare
	_postid alias for $1;
	_subject alias for $2;
	_post alias for $3;
	_sortorder alias for $4;
	_approved alias for $5;
	_rowcount int4;
begin

update		mp_forumposts
set			subject = _subject,
			post = _post,
			sortorder = _sortorder,
			approved = _approved
where		postid = _postid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 164 (class 1255 OID 27556)
-- Dependencies: 1141 3
-- Name: mp_forumposts_updatethreadsequence(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumposts_updatethreadsequence(integer, integer) RETURNS integer
    AS $_$
declare
	_postid alias for $1;
	_threadsequence alias for $2;
	_rowcount int4;
begin

update		mp_forumposts
set			threadsequence = _threadsequence
			
where		postid = _postid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 79 (class 1255 OID 27088)
-- Dependencies: 1141 3
-- Name: mp_forums_decrementpostcount(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_decrementpostcount(integer) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_rowcount int4;
begin

update mp_forums
set postcount = postcount - 1
where itemid = _forumid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 80 (class 1255 OID 27089)
-- Dependencies: 3 1141
-- Name: mp_forums_decrementthreadcount(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_decrementthreadcount(integer) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_rowcount int4;
begin

update		mp_forums
set			threadcount = threadcount - 1
where		itemid = _forumid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 199 (class 1255 OID 27090)
-- Dependencies: 1141 3
-- Name: mp_forums_incrementpostcount(integer, integer, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_incrementpostcount(integer, integer, timestamp without time zone) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_mostrecentpostuserid alias for $2;
	_mostrecentpostdate alias for $3;
	_rowcount int4;
begin

update 	mp_forums
set 		mostrecentpostdate = _mostrecentpostdate,
		mostrecentpostuserid = _mostrecentpostuserid,
 		postcount = postcount + 1
where 	itemid = _forumid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 200 (class 1255 OID 27091)
-- Dependencies: 1141 3
-- Name: mp_forums_incrementpostcountonly(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_incrementpostcountonly(integer) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_rowcount int4;
begin

update 	mp_forums
set 		
 		postcount = postcount + 1
where 	itemid = _forumid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 201 (class 1255 OID 27092)
-- Dependencies: 3 1141
-- Name: mp_forums_incrementthreadcount(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_incrementthreadcount(integer) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_rowcount int4;
begin

update		mp_forums
set			threadcount = threadcount + 1
where		itemid = _forumid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 83 (class 1255 OID 27094)
-- Dependencies: 3
-- Name: mp_forums_insert(integer, integer, character varying, text, boolean, boolean, integer, integer, integer, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_insert(integer, integer, character varying, text, boolean, boolean, integer, integer, integer, boolean) RETURNS integer
    AS $_$
insert into			mp_forums
(
				moduleid,
				createdby,
				title,
				description,
				ismoderated,
				isactive,
				sortorder,
				postsperpage,
				threadsperpage,
				allowanonymousposts
)
values
(
				$1,
				$2,
				$3,
				$4,
				$5,
				$6,
				$7,
				$8,
				$9,
				$10
);
select cast(currval('mp_forums_itemid_seq') as int4); $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 82 (class 1255 OID 27093)
-- Dependencies: 1141 3
-- Name: mp_forums_recalculatepoststats(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_recalculatepoststats(integer) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_rowcount int4;
	_mostrecentpostdate timestamp;
	_mostrecentpostuserid integer;
	_postcount integer;
begin
select into _mostrecentpostdate, _mostrecentpostuserid
        mostrecentpostdate, mostrecentpostuserid
    from mp_forumthreads 
    where forumid = _forumid
    order by mostrecentpostdate desc
    limit 1;
select into _postcount coalesce(sum(totalreplies), 0)+count(*)
    from mp_forumthreads 
    where forumid = _forumid;

update 	mp_forums
set 	mostrecentpostdate = _mostrecentpostdate,
		mostrecentpostuserid = coalesce(_mostrecentpostuserid, -1),
 		postcount = _postcount
where 	itemid = _forumid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 357 (class 1255 OID 32658)
-- Dependencies: 3 1009
-- Name: mp_forums_select(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_select(integer, integer) RETURNS SETOF mp_forums_select_type
    AS $_$
select		
	f.itemid ,
	f.moduleid ,
	f.createddate ,
	f.createdby ,
	f.title ,
	f.description ,
	f.ismoderated ,
	f.isactive ,
	f.sortorder ,
	f.threadcount  ,
	f.postcount ,
	f.mostrecentpostdate,
	f.mostrecentpostuserid ,
	f.postsperpage ,
	f.threadsperpage ,
	f.allowanonymousposts ,
	u.name as mostrecentpostuser ,
	s.subscribedate is not null and s.unsubscribedate is null as subscribed
from			mp_forums f
left outer join	mp_users u
on			f.mostrecentpostuserid = u.userid
left outer join mp_forumsubscriptions s
on			f.itemid = s.forumid and s.userid = $2
where		f.moduleid	= $1
			and f.isactive = true
order by		f.sortorder, f.itemid; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 358 (class 1255 OID 32662)
-- Dependencies: 1011 3
-- Name: mp_forums_selectone(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_selectone(integer) RETURNS SETOF mp_forums_selectone_type
    AS $_$
select		
	f.itemid ,
	f.moduleid ,
	f.createddate ,
	f.createdby ,
	f.title ,
	f.description ,
	f.ismoderated ,
	f.isactive ,
	f.sortorder ,
	f.threadcount  ,
	f.postcount ,
	f.mostrecentpostdate,
	f.mostrecentpostuserid ,
	f.postsperpage ,
	f.threadsperpage ,
	f.allowanonymousposts ,
	u.name as createdbyuser ,
	up.name as mostrecentpostuser
from			mp_forums f
left outer join	mp_users u
on			f.createdby = u.userid
left outer join	mp_users up
on			f.mostrecentpostuserid = up.userid
where		f.itemid = $1; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 204 (class 1255 OID 27103)
-- Dependencies: 1141 3
-- Name: mp_forums_update(integer, character varying, text, boolean, boolean, integer, integer, integer, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_update(integer, character varying, text, boolean, boolean, integer, integer, integer, boolean) RETURNS integer
    AS $_$
declare
	_itemid alias for $1;
	_title alias for $2;
	_description alias for $3;
	_ismoderated alias for $4;
	_isactive alias for $5;
	_sortorder alias for $6;
	_postsperpage alias for $7;
	_threadsperpage alias for $8;
	_allowanonymousposts alias for $9;
	_rowcount int4;
begin

update		mp_forums
set			title = _title,
			description = _description,
			ismoderated = _ismoderated,
			isactive = _isactive,
			sortorder = _sortorder,
			postsperpage = _postsperpage,
			threadsperpage = _threadsperpage,
			allowanonymousposts = _allowanonymousposts
where		itemid = _itemid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 84 (class 1255 OID 27104)
-- Dependencies: 1141 3
-- Name: mp_forums_updatepoststats(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_updatepoststats(integer, integer) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_mostrecentpostuserid alias for $2;
	_rowcount int4;
begin

update	mp_forums
set		mostrecentpostdate = current_timestamp(3),
		mostrecentpostuserid = _mostrecentpostuserid,
		postcount = postcount + 1
where	itemid = _forumid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 86 (class 1255 OID 27105)
-- Dependencies: 1141 3
-- Name: mp_forums_updatethreadstats(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forums_updatethreadstats(integer) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_rowcount int4;
begin

update		mp_forums
set			threadcount = threadcount + 1
where		itemid = _forumid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 302 (class 1255 OID 27553)
-- Dependencies: 3
-- Name: mp_forumsubscriptions_exists(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumsubscriptions_exists(integer, integer) RETURNS integer
    AS $_$
select	cast(count(*) as int4)
from		mp_forumsubscriptions
where	forumid = $1 AND userid = $2 AND unsubscribedate is null; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 87 (class 1255 OID 27106)
-- Dependencies: 1141 3
-- Name: mp_forumsubscriptions_insert(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumsubscriptions_insert(integer, integer) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_userid alias for $2;
	t_found int;
	_rowcount int4;

begin

select into t_found 1 
from mp_forumsubscriptions 
where 	forumid = _forumid and userid = _userid limit 1;

if  found then
	update 	mp_forumsubscriptions
	set		subscribedate = current_timestamp(3),
			unsubscribedate = null
	
	where 	forumid = _forumid and userid = _userid;
else
	insert into	mp_forumsubscriptions
	(
			forumid,
			userid
	)
	values
	(
			_forumid,
			_userid
	);   
end if;
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 202 (class 1255 OID 27107)
-- Dependencies: 3 1141
-- Name: mp_forumsubscriptions_unsubscribe(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumsubscriptions_unsubscribe(integer, integer) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_userid alias for $2;
	_rowcount int4;
begin

update		mp_forumsubscriptions
set			unsubscribedate = current_timestamp(3)
where		forumid = _forumid
			and userid = _userid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 73 (class 1255 OID 27066)
-- Dependencies: 1141 3
-- Name: mp_forumthreads_decrementreplycount(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_decrementreplycount(integer) RETURNS integer
    AS $_$
declare
	_threadid alias for $1;
	 _mostrecentpostuserid int;
	 _mostrecentpostdate timestamp;
	_rowcount int4;
begin

select into _mostrecentpostuserid, _mostrecentpostdate
	userid, postdate
from mp_forumposts 
where threadid = _threadid 
order by postid desc limit 1;

update		mp_forumthreads
set			mostrecentpostuserid = _mostrecentpostuserid,
			totalreplies = totalreplies - 1,
			mostrecentpostdate = _mostrecentpostdate
where		threadid = _threadid;   
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 70 (class 1255 OID 27067)
-- Dependencies: 1141 3
-- Name: mp_forumthreads_delete(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_delete(integer) RETURNS integer
    AS $_$
declare
	_threadid alias for $1;
	_rowcount int4;
begin

delete from  	mp_forumposts
where		threadid = _threadid; 

delete from  	mp_forumthreadsubscriptions
where		threadid = _threadid; 

delete from  	mp_forumthreads
where		threadid = _threadid; 



GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 198 (class 1255 OID 27068)
-- Dependencies: 1141 3
-- Name: mp_forumthreads_incrementreplycount(integer, integer, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_incrementreplycount(integer, integer, timestamp without time zone) RETURNS integer
    AS $_$
declare
	_threadid alias for $1;
	_mostrecentpostuserid alias for $2;
	_mostrecentpostdate alias for $3;
	_rowcount int4;
begin

update		mp_forumthreads
set			mostrecentpostuserid = _mostrecentpostuserid,
			totalreplies = totalreplies + 1,
			mostrecentpostdate = _mostrecentpostdate
where		threadid = _threadid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 92 (class 1255 OID 27069)
-- Dependencies: 3 1141
-- Name: mp_forumthreads_insert(integer, character varying, integer, boolean, integer, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_insert(integer, character varying, integer, boolean, integer, timestamp without time zone) RETURNS integer
    AS $_$
declare
	_forumid alias for $1;
	_threadsubject alias for $2;
	_sortorder alias for $3;
	_islocked alias for $4;
	_startedbyuserid alias for $5;
	_threaddate alias for $6;
	 _forumsequence int;
	_itemid int;

begin

_forumsequence := (select coalesce(max(forumsequence) + 1,1) from mp_forumthreads where forumid = _forumid);

insert into		mp_forumthreads
(
			forumid,
			threadsubject,
			sortorder,
			forumsequence,
			islocked,
			startedbyuserid,
			threaddate,
			mostrecentpostuserid,
			mostrecentpostdate
)
values
(
			
			_forumid,
			_threadsubject,
			_sortorder,
			_forumsequence,
			_islocked,
			_startedbyuserid,
			_threaddate,
			_startedbyuserid,
			_threaddate
);

select into _itemid cast(currval('mp_forumthreads_threadid_seq') as int4);  

insert into mp_forumthreadsubscriptions (threadid, userid)
	select _itemid as threadid, userid from mp_forumsubscriptions fs 
		where fs.forumid = _forumid and fs.subscribedate is not null and fs.unsubscribedate is null;

return _itemid;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 353 (class 1255 OID 32642)
-- Dependencies: 1141 3 1001
-- Name: mp_forumthreads_selectbyforum(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_selectbyforum(integer, integer) RETURNS SETOF mp_forumthreads_selectbyforum_type
    AS $_$
declare
	_forumid alias for $1;
	_pagenumber alias for $2;
	 _threadsperpage	int;
	 _currentpagemaxforumsequence	int;
	 _beginsequence int;
	 _endsequence int;
	_rec mp_forumthreads_selectbyforum_type%ROWTYPE;

begin

select into _threadsperpage  threadsperpage
		
from		mp_forums
where	itemid = _forumid;

_currentpagemaxforumsequence := (_threadsperpage * _pagenumber);

if _currentpagemaxforumsequence > _threadsperpage + 1 then
		_beginsequence := _currentpagemaxforumsequence - _threadsperpage + 1;
else
		_beginsequence := 1;
end if;

_endsequence := _beginsequence + _threadsperpage  -1;

for _rec in
	select	
			t.threadid,
			forumid,
			threadsubject,
			threaddate,
			totalviews,
			totalreplies,
			sortorder,
			islocked,
			forumsequence,
			mostrecentpostdate,
			mostrecentpostuserid,
			startedbyuserid,
			coalesce(u.name, 'guest') as mostrecentpostuser,
			s.name as startedby
	from		mp_forumthreads t
	left outer join		mp_users u
	on		t.mostrecentpostuserid = u.userid
	left outer join		mp_users s
	on		t.startedbyuserid = s.userid
	where	t.forumid = _forumid
			and t.forumsequence 
	between _beginsequence 
	and _endsequence
	order by	t.sortorder, t.threadid desc
loop
	return next _rec;
end loop;
return;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 354 (class 1255 OID 32646)
-- Dependencies: 1003 3 1141
-- Name: mp_forumthreads_selectbyforumdesc(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_selectbyforumdesc(integer, integer) RETURNS SETOF mp_forumthreads_selectbyforumdesc_type
    AS $_$
declare
	_forumid alias for $1;
	_pagenumber alias for $2;
	 _threadsperpage	int;
	 _totalthreads	int;
	 _beginsequence int;
	 _endsequence int;
	_rec mp_forumthreads_selectbyforumdesc_type%ROWTYPE;

begin

select into _threadsperpage, _totalthreads 
		threadsperpage, _totalthreads
from		mp_forums
where	itemid = _forumid;

_beginsequence := _totalthreads - (_threadsperpage * _pagenumber) + 1;
_endsequence := _beginsequence + _threadsperpage  -1;

for _rec in
	select	
		t.threadid ,
		t.forumid ,
		t.threadsubject ,
		t.threaddate ,
		t.totalviews ,
		t.totalreplies ,
		t.sortorder ,
		t.islocked ,
		t.forumsequence ,
		t.mostrecentpostdate ,
		t.mostrecentpostuserid,
		startedbyuserid ,
		u.name as mostrecentpostuser ,
		s.name as startedby
	from		mp_forumthreads t
	left outer join		mp_users u
	on		t.mostrecentpostuserid = u.userid
	left outer join		mp_users s
	on		t.startedbyuserid = s.userid
	where	t.forumid = _forumid
			and t.forumsequence 
	between _beginsequence 
	and _endsequence
	order by	t.sortorder, t.threadid desc
	loop
		return next _rec;
	end loop;
return;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 355 (class 1255 OID 32650)
-- Dependencies: 3 1141 1005
-- Name: mp_forumthreads_selectbyforumdesc_v2(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_selectbyforumdesc_v2(integer, integer) RETURNS SETOF mp_forumthreads_selectbyforumdesc_v2_type
    AS $_$
declare
	_forumid alias for $1;
	_pagenumber alias for $2;
	 _threadsperpage	int;
	 _totalthreads	int;
	 _beginsequence int;
	_rec mp_forumthreads_selectbyforumdesc_v2_type%ROWTYPE;

begin

select into _threadsperpage, _totalthreads 
		threadsperpage, threadcount 
from		mp_forums
where	itemid = _forumid;

_beginsequence := _totalthreads - (_threadsperpage * _pagenumber) + 1;
 
for _rec in
	select	
		t.threadid ,
		t.forumid ,
		t.threadsubject ,
		t.threaddate ,
		t.totalviews ,
		t.totalreplies ,
		t.sortorder ,
		t.islocked ,
		t.forumsequence ,
		t.mostrecentpostdate ,
		t.mostrecentpostuserid,
		startedbyuserid ,
		u.name as mostrecentpostuser ,
		s.name as startedby
	from		mp_forumthreads t
	left outer join		mp_users u
	on		t.mostrecentpostuserid = u.userid
	left outer join		mp_users s
	on		t.startedbyuserid = s.userid
	where	t.forumid = _forumid
	order by	t.mostrecentpostdate desc
	limit _threadsperpage
	offset _beginsequence
loop
		return next _rec;
	end loop;
return;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 414 (class 1255 OID 32873)
-- Dependencies: 745 3
-- Name: mp_forumthreads_selectbypage(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_selectbypage(integer, integer) RETURNS SETOF mp_forumthreads_selectbypage_type
    AS $_$
select
		fp.threadid,
		fp.postid,
		fp.subject,
		fp.post,
		f.moduleid,
		f.itemid,
		m.moduletitle,
		md.featurename
		
from
		mp_forumposts fp
		
JOIN		mp_forumthreads ft
ON		fp.threadid = ft.threadid

JOIN		mp_forums f
ON		f.itemid = ft.forumid
		
JOIN		mp_modules m
ON		f.moduleid = m.moduleid

JOIN		mp_moduledefinitions md
ON		m.moduledefid = md.moduledefid

JOIN		mp_pagemodules pm
ON		pm.moduleid = m.moduleid

JOIN		mp_pages p
ON		p.pageid = pm.pageid
		
where
		p.siteid = $1
		AND pm.pageid = $2
		AND fp.approved = true  ; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 356 (class 1255 OID 32654)
-- Dependencies: 1007 3
-- Name: mp_forumthreads_selectone(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_selectone(integer) RETURNS SETOF mp_forumthreads_selectone_type
    AS $_$
select	
		t.threadid ,
		t.forumid ,
		t.threadsubject ,
		t.threaddate ,
		t.totalviews ,
		t.totalreplies ,
		t.sortorder ,
		t.islocked ,
		t.forumsequence ,
		t.mostrecentpostdate ,
		t.mostrecentpostuserid,
		startedbyuserid ,
		coalesce(u.name, 'guest') as mostrecentpostuser ,
		coalesce(s.name, 'guest') as startedby ,
		f.postsperpage
from			mp_forumthreads t
left outer join	mp_users u
on			t.mostrecentpostuserid = u.userid
left outer join	mp_users s
on			t.startedbyuserid = s.userid
join			mp_forums f
on			f.itemid = t.forumid
where		t.threadid = $1; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 81 (class 1255 OID 27086)
-- Dependencies: 1141 3
-- Name: mp_forumthreads_update(integer, integer, character varying, integer, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_update(integer, integer, character varying, integer, boolean) RETURNS integer
    AS $_$
declare
	_threadid alias for $1;
	_forumid alias for $2;
	_threadsubject alias for $3;
	_sortorder alias for $4;
	_islocked alias for $5;
	_rowcount int4;
begin

update		mp_forumthreads
set			forumid = _forumid,
			threadsubject = _threadsubject,
			sortorder = _sortorder,
			islocked = _islocked
where		threadid = _threadid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 170 (class 1255 OID 27557)
-- Dependencies: 3 1141
-- Name: mp_forumthreads_updateforumsequence(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_updateforumsequence(integer, integer) RETURNS integer
    AS $_$
declare
	_threadid alias for $1;
	_forumsequence alias for $2;
	_rowcount int4;
begin

update		mp_forumthreads
set			forumsequence = _forumsequence
where		threadid = _threadid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 78 (class 1255 OID 27087)
-- Dependencies: 1141 3
-- Name: mp_forumthreads_updateviewstats(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreads_updateviewstats(integer) RETURNS integer
    AS $_$
declare
	_threadid alias for $1;
	_rowcount int4;
begin

update		mp_forumthreads
set		
			totalviews = totalviews + 1
where		threadid = _threadid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 352 (class 1255 OID 32638)
-- Dependencies: 3 999
-- Name: mp_forumthreadsubscribers_selectbythread(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreadsubscribers_selectbythread(integer, integer) RETURNS SETOF mp_forumthreadsubscribers_selectbythread_type
    AS $_$
select		u.email
from			mp_users u
join			mp_forumthreadsubscriptions s
on			u.userid = s.userid
where		s.threadid = $1
			and s.unsubscribedate is null
			and u.userid <> $2; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 288 (class 1255 OID 27554)
-- Dependencies: 3
-- Name: mp_forumthreadsubscriptions_exists(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreadsubscriptions_exists(integer, integer) RETURNS integer
    AS $_$
select	cast(count(*) as int4)
from		mp_forumthreadsubscriptions
where	threadid = $1 AND userid = $2 AND unsubscribedate is null; $_$
    LANGUAGE sql SECURITY DEFINER;


--
-- TOC entry 66 (class 1255 OID 27063)
-- Dependencies: 3 1141
-- Name: mp_forumthreadsubscriptions_insert(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreadsubscriptions_insert(integer, integer) RETURNS integer
    AS $_$
declare
	_threadid alias for $1;
	_userid alias for $2;
	t_found int;
	_rowcount int4;

begin

select into t_found 1 
from mp_forumthreadsubscriptions 
where 	threadid = _threadid and userid = _userid limit 1;

if  found then
	update 	mp_forumthreadsubscriptions
	set		subscribedate = current_timestamp(3),
			unsubscribedate = null
	
	where 	threadid = _threadid and userid = _userid;
else
	insert into	mp_forumthreadsubscriptions
	(
			threadid,
			userid
	)
	values
	(
			_threadid,
			_userid
	);   
end if;
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 67 (class 1255 OID 27064)
-- Dependencies: 3 1141
-- Name: mp_forumthreadsubscriptions_unsubscribeallthreads(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreadsubscriptions_unsubscribeallthreads(integer) RETURNS integer
    AS $_$
declare
	_userid alias for $1;
	_rowcount int4;
begin

update		mp_forumthreadsubscriptions
set			unsubscribedate = current_timestamp(3)
where		
			userid = _userid;
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;


--
-- TOC entry 72 (class 1255 OID 27065)
-- Dependencies: 3 1141
-- Name: mp_forumthreadsubscriptions_unsubscribethread(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mp_forumthreadsubscriptions_unsubscribethread(integer, integer) RETURNS integer
    AS $_$
declare
	_threadid alias for $1;
	_userid alias for $2;
	_rowcount int4;
begin

update		mp_forumthreadsubscriptions
set			unsubscribedate = current_timestamp(3)
where		threadid = _threadid
			and userid = _userid; 
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end$_$
    LANGUAGE plpgsql SECURITY DEFINER;









ALTER TABLE ONLY mp_forumposts
    ADD CONSTRAINT pk_forumposts PRIMARY KEY (postid);


ALTER TABLE ONLY mp_forums
    ADD CONSTRAINT pk_forums PRIMARY KEY (itemid);


ALTER TABLE ONLY mp_forumsubscriptions
    ADD CONSTRAINT pk_forumsubscriptions PRIMARY KEY (subscriptionid);

ALTER TABLE ONLY mp_forumthreads
    ADD CONSTRAINT pk_forumthreads PRIMARY KEY (threadid);


ALTER TABLE ONLY mp_forumthreadsubscriptions
    ADD CONSTRAINT pk_forumthreadsubscriptions PRIMARY KEY (threadsubscriptionid);


CREATE INDEX ifk_forumposts_userid ON mp_forumposts USING btree (userid);


CREATE INDEX ifk_forums_moduleid ON mp_forums USING btree (moduleid);


CREATE INDEX ifk_forumsubscriptions_forumid ON mp_forumsubscriptions USING btree (forumid);

CREATE INDEX ifk_forumsubscriptions_userid ON mp_forumsubscriptions USING btree (userid);


CREATE INDEX ifk_forumthreadsubscriptio_userid ON mp_forumthreadsubscriptions USING btree (userid);


ALTER TABLE ONLY mp_forumposts
    ADD CONSTRAINT fk_forumposts_forumthreads FOREIGN KEY (threadid) REFERENCES mp_forumthreads(threadid);


ALTER TABLE ONLY mp_forumthreads
    ADD CONSTRAINT fk_forumthreads_forums FOREIGN KEY (forumid) REFERENCES mp_forums(itemid);

ALTER TABLE ONLY mp_forumthreadsubscriptions
    ADD CONSTRAINT fk_forumthreadsubscriptions_forumthreads FOREIGN KEY (threadid) REFERENCES mp_forumthreads(threadid);





