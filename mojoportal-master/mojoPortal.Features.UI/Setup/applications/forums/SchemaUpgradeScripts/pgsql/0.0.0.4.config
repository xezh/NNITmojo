

-- always put schema changes at the top




create or replace function drop_type
(
	varchar(100) --: typename
) returns int4 
as '
declare
	_typename alias for $1;
	_rowcount int4;

begin

_rowcount := 0;
perform 1 from pg_class where
	  relname like _typename limit 1;
	
if found then
	EXECUTE ''DROP TYPE '' || _typename || '' CASCADE;'';
	GET DIAGNOSTICS _rowcount = ROW_COUNT;
end if;
return _rowcount; 
end'
security definer language plpgsql;

CREATE OR REPLACE FUNCTION  monthname(timestamptz)
  RETURNS varchar(10) AS
'
declare
	_date alias for $1;
	_month int;
	_monthname varchar(10);
begin
    _month := date_part(''month'', _date);
    _monthname := ''January'';
    if _month = 2 then
        _monthname := ''February'';
    end if;
    if _month = 3 then
        _monthname := ''March'';
    end if;
    if _month = 4 then
        _monthname := ''April'';
    end if;
    if _month = 5 then
        _monthname := ''May'';
    end if;
    if _month = 6 then
        _monthname := ''June'';
    end if;
    if _month = 7 then
        _monthname := ''July'';
    end if;
    if _month = 8 then
        _monthname := ''August'';
    end if;
    if _month = 9 then
        _monthname := ''September'';
    end if;
    if _month = 10 then
        _monthname := ''October'';
    end if;
    if _month = 11 then
        _monthname := ''November'';
    end if;
    if _month = 12 then
        _monthname := ''December'';
    end if;
    return _monthname;    
end;'
  LANGUAGE 'plpgsql' VOLATILE SECURITY DEFINER;
  
  -- keep the above at the top
  -- --------------------------------



select drop_type('mp_forumposts_selectbythread_type2');
CREATE TYPE  mp_forumposts_selectbythread_type2 AS (
	postid int4 ,
	threadid int4 ,
	threadsequence int4 ,
	subject varchar(255) ,
	postdate timestamp ,
	approved bool ,
	userid int4 ,
	sortorder int4 ,
	post text,
	forumid int4 ,
	mostrecentpostuser varchar(50) ,
	startedby varchar(50) ,
	postauthor varchar(50) ,
	authoremail varchar(100) ,
	trusted bool ,
	postauthortotalposts int4 ,
	userrevenue decimal(15,4) ,
	postauthoravatar varchar(255) ,
	postauthorwebsiteurl varchar(100) ,
	postauthorsignature varchar(255)
);

create or replace function mp_forumposts_selectbythread2
(
	int, --:threadid $1
	int --:pagenumber $2
) returns setof mp_forumposts_selectbythread_type2 
as '
declare
	_threadid alias for $1;
	_pagenumber alias for $2;
	 _postsperpage	int;
	 _totalposts		int;
	 _currentpagemaxthreadsequence	int;
	 _beginsequence int;
	 _endsequence int;
	_rec mp_forumposts_selectbythread_type2%ROWTYPE;

begin

select into _postsperpage, _totalposts 
	f.postsperpage, ft.totalreplies
from		mp_forumthreads ft
join		mp_forums f
on		ft.forumid = f.itemid
where	ft.threadid = _threadid;

_currentpagemaxthreadsequence := (_postsperpage * _pagenumber) ;

if _currentpagemaxthreadsequence > _postsperpage then
		_beginsequence := _currentpagemaxthreadsequence - _postsperpage + 1;
else
		_beginsequence := 1;
end if;

_endsequence := _beginsequence + _postsperpage  -1;

for _rec in
	select	
			p.postid ,
			p.threadid ,
			p.threadsequence ,
			p.subject ,
			p.postdate ,
			p.approved ,
			p.userid ,
			p.sortorder ,
			p.post ,
			ft.forumid,
			coalesce(u.name,''guest'') as mostrecentpostuser,
			coalesce(s.name,''guest'') as startedby,
			coalesce(up.name, ''guest'') as postauthor,
			coalesce(up.email, '''') as authoremail,
			coalesce(up.trusted, false) as trusted,
			coalesce(up.totalposts, 0) as postauthortotalposts,
			coalesce(up.totalrevenue, 0) as userevenue,
			coalesce(up.AvatarUrl, ''blank.gif'') as postauthoravatar,
			up.websiteurl as postauthorwebsiteurl,
			up.signature as postauthorsignature
	from		mp_forumposts p
	join		mp_forumthreads ft
	on		p.threadid = ft.threadid
	left outer join		mp_users u
	on		ft.mostrecentpostuserid = u.userid
	left outer join		mp_users s
	on		ft.startedbyuserid = s.userid
	left outer join		mp_users up
	on		up.userid = p.userid
	where	ft.threadid = _threadid
			and p.threadsequence >= _beginsequence
			and  p.threadsequence <= _endsequence
	order by	p.sortorder, p.postid   
loop
	return next _rec;
end loop;
return;
end'
security definer language plpgsql;
grant execute on function mp_forumposts_selectbythread2
(
	int, --:threadid $1
	int --:pagenumber $2
) to public;











-- Keep this at the bottom -------------------------

drop function drop_type
(
	varchar(100) --: typename
);
